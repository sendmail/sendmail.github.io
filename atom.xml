<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小强</title>
  
  <subtitle>记录玩中的过程</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jiayie.xyz/"/>
  <updated>2020-01-09T13:39:20.400Z</updated>
  <id>http://jiayie.xyz/</id>
  
  <author>
    <name>小强</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ShadowsocksR如何限制用户连接数量及速度</title>
    <link href="http://jiayie.xyz/2020/01/09/ShadowsocksR%E5%A6%82%E4%BD%95%E9%99%90%E5%88%B6%E7%94%A8%E6%88%B7%E8%BF%9E%E6%8E%A5%E6%95%B0%E9%87%8F%E5%8F%8A%E9%80%9F%E5%BA%A6/"/>
    <id>http://jiayie.xyz/2020/01/09/ShadowsocksR%E5%A6%82%E4%BD%95%E9%99%90%E5%88%B6%E7%94%A8%E6%88%B7%E8%BF%9E%E6%8E%A5%E6%95%B0%E9%87%8F%E5%8F%8A%E9%80%9F%E5%BA%A6/</id>
    <published>2020-01-09T13:30:04.000Z</published>
    <updated>2020-01-09T13:39:20.400Z</updated>
    
    <content type="html"><![CDATA[<p>SSR账号小范围分享给家人或朋友。这种情况下，就有必要为SSR设置一定的限制了，避免滥用问题。</p><p>我们只需将单个账号的同时连接数量，限制在一个较小的范围内，比如6，这样即便这个账号被100人拥有，也只能同时登录6个人。<br>另外SSR的限流限速，需要相关协议的支持，即安装<code>SSR</code>服务器端时选择的协议<code>（protocol）</code>。</p><blockquote><p>如下图所示，建议选择<code>auth_aes128_md5</code>开始往下的几种，最好是<code>auth_chain</code>开头的几个，效果更好。</p></blockquote><img src="/2020/01/09/ShadowsocksR如何限制用户连接数量及速度/1.jpg"><h4 id="限制SSR连接数量"><a href="#限制SSR连接数量" class="headerlink" title="限制SSR连接数量"></a>限制SSR连接数量</h4><p>打开<code>ShadowsocksR</code>的配置文件 <code>config.json</code>，该文件路径在<code>/etc/shadowsocks-r/config.json</code>。<br>找到如下参数行，双引号中间填入合适的数字，该数字即代表限制连接数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"protocol_param"</span>:<span class="string">""</span>,</span><br><span class="line"></span><br><span class="line">更改后：</span><br><span class="line">    <span class="string">"protocol_param"</span>:<span class="string">"6"</span>,</span><br></pre></td></tr></table></figure><h4 id="限制SSR连接速度"><a href="#限制SSR连接速度" class="headerlink" title="限制SSR连接速度"></a>限制SSR连接速度</h4><p>用Winscp登录SSR服务器，打开SSR的配置文件<code>config.json</code>，该文件路径在<code>/etc/shadowsocks-r/config.json</code>。<br>在配置文件中的大括号中，添加以下两行参数，将后面的数字改为适合自己的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"speed_limit_per_con"</span>: 512,</span><br><span class="line">    <span class="string">"speed_limit_per_user"</span>: 1024,</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">speed_limit_per_con&amp;<span class="comment">#8221;: 512,代表每个连接限速512KB。</span></span><br><span class="line">speed_limit_per_user&amp;<span class="comment">#8221;: 1024，代表每个端口限速1MB。</span></span><br></pre></td></tr></table></figure><p>完成后保存，然后重启SSR使设置生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks-r restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SSR账号小范围分享给家人或朋友。这种情况下，就有必要为SSR设置一定的限制了，避免滥用问题。&lt;/p&gt;
&lt;p&gt;我们只需将单个账号的同时连接数量，限制在一个较小的范围内，比如6，这样即便这个账号被100人拥有，也只能同时登录6个人。&lt;br&gt;另外SSR的限流限速，需要相关协议的
      
    
    </summary>
    
    
      <category term="一键脚本" scheme="http://jiayie.xyz/categories/%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="shadowsocksR" scheme="http://jiayie.xyz/tags/shadowsocksR/"/>
    
  </entry>
  
  <entry>
    <title>SSR添加多用户多端口教程ShadowsocksR多用户</title>
    <link href="http://jiayie.xyz/2020/01/09/SSR%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%94%A8%E6%88%B7%E5%A4%9A%E7%AB%AF%E5%8F%A3%E6%95%99%E7%A8%8BShadowsocksR%E5%A4%9A%E7%94%A8%E6%88%B7/"/>
    <id>http://jiayie.xyz/2020/01/09/SSR%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%94%A8%E6%88%B7%E5%A4%9A%E7%AB%AF%E5%8F%A3%E6%95%99%E7%A8%8BShadowsocksR%E5%A4%9A%E7%94%A8%E6%88%B7/</id>
    <published>2020-01-09T13:19:18.000Z</published>
    <updated>2020-01-09T13:26:11.319Z</updated>
    
    <content type="html"><![CDATA[<p>我们在搭建好SSR之后，一般情况下是一个人用的，所以默认的一个端口就够了。但还有一些朋友可能有多用户的需求，那这种情况就需要对SSR服务器端做额外的设置了。  用过SSR的朋友可能都知道，使用SSR的时候只需要输入服务器IP、端口和密码等信息，并不需要单独的用户名。所以针对多用户的需求，我们并不是真的创建很多用户，而是为SSR服务器开放多个端口，每个端口对应不同的密码就可以了。</p><h4 id="多用户实现途径"><a href="#多用户实现途径" class="headerlink" title="多用户实现途径"></a>多用户实现途径</h4><p>连接至服务器，打开<code>/etc/shadowsocks-r/config.json</code>，这是SSR的配置文件，其原始部分内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="string">"server_ipv6"</span>:<span class="string">"::"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>:8686,</span><br><span class="line">    <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:1080,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"mimamima"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>:120,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"chacha20"</span>,</span><br><span class="line">    <span class="string">"protocol"</span>:<span class="string">"auth_aes128_md5"</span>,</span><br><span class="line">    <span class="string">"protocol_param"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"obfs"</span>:<span class="string">"http_simple"</span>,</span><br><span class="line">    <span class="string">"obfs_param"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"redirect"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"dns_ipv6"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="string">"workers"</span>:1</span><br></pre></td></tr></table></figure><p>我们需要分别删掉关于端口和密码的两行，即以下两行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"server_port"</span>:8686,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"mimamima"</span>,</span><br></pre></td></tr></table></figure><p>然后另外加入一个port_password参数，参数中标明多个端口和对应的密码：<br><strong>注意：最后一个密码后面只有双引号没有逗号，前几个密码后面都有！</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"port_password"</span>:&#123;</span><br><span class="line">        <span class="string">"8686"</span>:<span class="string">"mimamima1"</span>,</span><br><span class="line">        <span class="string">"8787"</span>:<span class="string">"mimamima2"</span>,</span><br><span class="line">        <span class="string">"8888"</span>:<span class="string">"mimamima3"</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>更改后的最终形式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="string">"server_ipv6"</span>:<span class="string">"::"</span>,</span><br><span class="line">    <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:1080,</span><br><span class="line">    <span class="string">"port_password"</span>:&#123;</span><br><span class="line">        <span class="string">"8686"</span>:<span class="string">"mimamima1"</span>,</span><br><span class="line">        <span class="string">"8787"</span>:<span class="string">"mimamima2"</span>,</span><br><span class="line">        <span class="string">"8888"</span>:<span class="string">"mimamima3"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"timeout"</span>:120,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"chacha20"</span>,</span><br><span class="line">    <span class="string">"protocol"</span>:<span class="string">"auth_aes128_md5"</span>,</span><br><span class="line">    <span class="string">"protocol_param"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"obfs"</span>:<span class="string">"http_simple"</span>,</span><br><span class="line">    <span class="string">"obfs_param"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"redirect"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"dns_ipv6"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="string">"workers"</span>:1</span><br></pre></td></tr></table></figure><p>更改完成后，保存文件。如果系统启用了防火墙，记得在防火墙中开放刚才添加的端口。<br>最后重启SSR服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks-r restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们在搭建好SSR之后，一般情况下是一个人用的，所以默认的一个端口就够了。但还有一些朋友可能有多用户的需求，那这种情况就需要对SSR服务器端做额外的设置了。  用过SSR的朋友可能都知道，使用SSR的时候只需要输入服务器IP、端口和密码等信息，并不需要单独的用户名。所以针对
      
    
    </summary>
    
    
      <category term="一键脚本" scheme="http://jiayie.xyz/categories/%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="shadowsocksR多用户" scheme="http://jiayie.xyz/tags/shadowsocksR%E5%A4%9A%E7%94%A8%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft-Office2016四合一绿色便携精简版</title>
    <link href="http://jiayie.xyz/2020/01/09/Microsoft-Office2016%E5%9B%9B%E5%90%88%E4%B8%80%E7%BB%BF%E8%89%B2%E4%BE%BF%E6%90%BA%E7%B2%BE%E7%AE%80%E7%89%88/"/>
    <id>http://jiayie.xyz/2020/01/09/Microsoft-Office2016%E5%9B%9B%E5%90%88%E4%B8%80%E7%BB%BF%E8%89%B2%E4%BE%BF%E6%90%BA%E7%B2%BE%E7%AE%80%E7%89%88/</id>
    <published>2020-01-09T07:40:18.000Z</published>
    <updated>2020-01-09T09:13:04.947Z</updated>
    
    <content type="html"><![CDATA[<h4 id="绿色制作"><a href="#绿色制作" class="headerlink" title="绿色制作"></a>绿色制作</h4><p>本四合一包含word,excel,ppt,access</p><p>四合一精简版制作，大小限制到了80M左右，解压后运行”安装.cmd”即可使用</p><p>2016下载地址：链接: <a href="https://pan.baidu.com/s/1t8tCOOAvci89Cpw--sKAdg" target="_blank" rel="noopener">https://pan.baidu.com/s/1t8tCOOAvci89Cpw--sKAdg</a> 提取码: 6mi2<br>2010下载地址：<a href="https://www.lanzous.com/b0f18jgbg" target="_blank" rel="noopener">https://www.lanzous.com/b0f18jgbg</a><br>密码:1lk1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;绿色制作&quot;&gt;&lt;a href=&quot;#绿色制作&quot; class=&quot;headerlink&quot; title=&quot;绿色制作&quot;&gt;&lt;/a&gt;绿色制作&lt;/h4&gt;&lt;p&gt;本四合一包含word,excel,ppt,access&lt;/p&gt;
&lt;p&gt;四合一精简版制作，大小限制到了80M左右，解压后运行”
      
    
    </summary>
    
    
      <category term="office" scheme="http://jiayie.xyz/categories/office/"/>
    
    
      <category term="office" scheme="http://jiayie.xyz/tags/office/"/>
    
  </entry>
  
  <entry>
    <title>小睿家庭云刷机教程含第三方固件</title>
    <link href="http://jiayie.xyz/2020/01/07/%E5%B0%8F%E7%9D%BF%E5%AE%B6%E5%BA%AD%E4%BA%91%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B%E5%90%AB%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BA%E4%BB%B6/"/>
    <id>http://jiayie.xyz/2020/01/07/%E5%B0%8F%E7%9D%BF%E5%AE%B6%E5%BA%AD%E4%BA%91%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B%E5%90%AB%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BA%E4%BB%B6/</id>
    <published>2020-01-07T09:19:10.000Z</published>
    <updated>2020-01-07T09:24:40.112Z</updated>
    
    <content type="html"><![CDATA[<p>小睿家庭云主板采用Pandorabox-ralink-mt7621-pbr-m1型号，外置一个wan千兆口，两个lan千兆口，一个usb3.0接口，家庭云原版系统已经默认刷入pboot，可以随意刷入适配型号为pbr-m1的第三方固件，比如Padavan、OpenWrt、PandoraBox、高格等固件，以上固件都可以正常识别硬盘，做主路由或旁路由都可以，毕竟是千兆路由器的配置，只是双无线隔墙信号有点渣，不穿墙的话无线还可以做为日常办公使用，可以搭配斐讯E1做无线信号转发，信号也是杠杠的。固件内置的插件可以支持硬盘休眠，去广告，开启S-S R+模式，BT下载、多线多拔、安装可道云、开户DDNS或frp做一个小型的家庭NAS足够了。</p><p>刷机步骤如下：</p><ol><li><p>首先用网线直接连接小睿后面的黄色Lan口，电脑网络设置为DHCP模式；</p></li><li><p>在断电情况下用针尖状物体，顶住小睿后面的reset键(不松手)，同时插电源；</p></li><li><p>等待10秒左右，有一个红灯会快速闪动，然后浏览器可以访问<a href="http://192.168.60.1，出现固件恢复页面，" target="_blank" rel="noopener">http://192.168.60.1，出现固件恢复页面，</a> 点恢复按钮，选择第三方固件bin文件，等待系统刷机和重启即可正常使用；</p></li><li><p>刷机的时候如果电脑开有虚拟机的可能会导致失败，请关闭虚拟机和网络虚拟网卡；</p></li><li><p>固件下载 * * 链接: <a href="https://pan.baidu.com/s/1ee0KX5T9nlP1R05xoN9osw" target="_blank" rel="noopener">https://pan.baidu.com/s/1ee0KX5T9nlP1R05xoN9osw</a> 提取码: 9jbv </p><img src="/2020/01/07/小睿家庭云刷机教程含第三方固件/1.jpg"><img src="/2020/01/07/小睿家庭云刷机教程含第三方固件/2.png"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;小睿家庭云主板采用Pandorabox-ralink-mt7621-pbr-m1型号，外置一个wan千兆口，两个lan千兆口，一个usb3.0接口，家庭云原版系统已经默认刷入pboot，可以随意刷入适配型号为pbr-m1的第三方固件，比如Padavan、OpenWrt、Pa
      
    
    </summary>
    
    
    
      <category term="小睿家庭云" scheme="http://jiayie.xyz/tags/%E5%B0%8F%E7%9D%BF%E5%AE%B6%E5%BA%AD%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>小睿私人云刷OMV教程</title>
    <link href="http://jiayie.xyz/2020/01/07/%E5%B0%8F%E7%9D%BF%E7%A7%81%E4%BA%BA%E4%BA%91%E5%88%B7OMV%E6%95%99%E7%A8%8B/"/>
    <id>http://jiayie.xyz/2020/01/07/%E5%B0%8F%E7%9D%BF%E7%A7%81%E4%BA%BA%E4%BA%91%E5%88%B7OMV%E6%95%99%E7%A8%8B/</id>
    <published>2020-01-07T09:10:56.000Z</published>
    <updated>2020-01-07T09:16:48.398Z</updated>
    
    <content type="html"><![CDATA[<p>1，把小睿私人云刷debian刷机教程参考：上一篇<br>固件地址：<a href="https://github.com/hanwckf/build-raycloud/releases" target="_blank" rel="noopener">https://github.com/hanwckf/build-raycloud/releases</a><br>2，ssh 连接上小睿 账号：root，密码：admin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">替换源</span><br><span class="line">nano /etc/apt/sources.list</span><br><span class="line">替换成下面内容：</span><br><span class="line">deb http://deb.debian.org/debian buster main contrib non-free</span><br><span class="line">deb-src http://deb.debian.org/debian buster main contrib non-free</span><br><span class="line">deb http://security.debian.org/debian-security buster/updates main contrib</span><br><span class="line">deb-src http://security.debian.org/debian-security buster/updates main contrib</span><br></pre></td></tr></table></figure><p>保存并推出<br>更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><p>安装 Realtek Firmware</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install firmware-realtek</span><br></pre></td></tr></table></figure><p>安装其他内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install firmware-linux firmware-linux-free firmware-linux-nonfree</span><br></pre></td></tr></table></figure><p>安装其gnupg2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install gnupg2</span><br></pre></td></tr></table></figure><p>下载公钥并添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O <span class="string">"/etc/apt/trusted.gpg.d/openmediavault-archive-keyring.asc"</span> https://packages.openmediavault.org/public/archive.key</span><br><span class="line">apt-key add <span class="string">"/etc/apt/trusted.gpg.d/openmediavault-archive-keyring.asc"</span></span><br></pre></td></tr></table></figure><p>添加omv软件源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;&gt; /etc/apt/sources.list.d/openmediavault.list</span><br><span class="line">deb https://packages.openmediavault.org/public usul main</span><br><span class="line"><span class="comment"># deb https://downloads.sourceforge.net/project/openmediavault/packages usul main</span></span><br><span class="line"><span class="comment">## Uncomment the following line to add software from the proposed repository.</span></span><br><span class="line"><span class="comment"># deb https://packages.openmediavault.org/public usul-proposed main</span></span><br><span class="line"><span class="comment"># deb https://downloads.sourceforge.net/project/openmediavault/packages usul-proposed main</span></span><br><span class="line"><span class="comment">## This software is not part of OpenMediaVault, but is offered by third-party</span></span><br><span class="line"><span class="comment">## developers as a service to OpenMediaVault users.</span></span><br><span class="line"><span class="comment"># deb https://packages.openmediavault.org/public usul partner</span></span><br><span class="line"><span class="comment"># deb https://downloads.sourceforge.net/project/openmediavault/packages usul partner</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>环境设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LANG=C.UTF-8</span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"><span class="built_in">export</span> APT_LISTCHANGES_FRONTEND=none</span><br><span class="line">apt-get update</span><br><span class="line">apt-get --allow-unauthenticated install openmediavault-keyring</span><br><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get --yes --auto-remove --show-upgraded \</span><br><span class="line">    --allow-downgrades --allow-change-held-packages \</span><br><span class="line">    --no-install-recommends \</span><br><span class="line">    --option Dpkg::Options::=<span class="string">"--force-confdef"</span> \</span><br><span class="line">    --option DPkg::Options::=<span class="string">"--force-confold"</span> \</span><br><span class="line">install postfix openmediavault</span><br></pre></td></tr></table></figure><p>8，等待安装结束，输入IP地址就能进OMV系统了<br>默认账号：admin，密码：openmediavault</p><p>文章转自恩山 链接：<a href="https://www.right.com.cn/forum/thread-1329009-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-1329009-1-1.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1，把小睿私人云刷debian刷机教程参考：上一篇&lt;br&gt;固件地址：&lt;a href=&quot;https://github.com/hanwckf/build-raycloud/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git
      
    
    </summary>
    
    
    
      <category term="小睿私人云" scheme="http://jiayie.xyz/tags/%E5%B0%8F%E7%9D%BF%E7%A7%81%E4%BA%BA%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>小睿私人云RTD1296刷机步骤</title>
    <link href="http://jiayie.xyz/2020/01/07/%E5%B0%8F%E7%9D%BF%E7%A7%81%E4%BA%BA%E4%BA%91RTD1296%E5%88%B7%E6%9C%BA%E6%AD%A5%E9%AA%A4/"/>
    <id>http://jiayie.xyz/2020/01/07/%E5%B0%8F%E7%9D%BF%E7%A7%81%E4%BA%BA%E4%BA%91RTD1296%E5%88%B7%E6%9C%BA%E6%AD%A5%E9%AA%A4/</id>
    <published>2020-01-07T09:00:33.000Z</published>
    <updated>2020-01-07T09:32:39.113Z</updated>
    
    <content type="html"><![CDATA[<p>1、准备工具：<br>①小睿私人云一台。<br>②CH340G TTL转USB模块，淘宝价8.5元包邮送杜邦线。<br>③固件。<code>https://github.com/hanwckf/build-raycloud/releases/tag/v2019-7-8</code><br>下载<code>ubuntu-base-18.04.2-base-raycloud.tar.xz</code>，或者下载BPI-W2固件。<br>④刷机工具包。链接: <a href="https://pan.baidu.com/s/1yh4glvUJw_enhEX4qElYhA" target="_blank" rel="noopener">https://pan.baidu.com/s/1yh4glvUJw_enhEX4qElYhA</a> 提取码: vbgi。<br>2、拆机。拔掉背后4个橡胶垫，拆开螺丝，将硬盘与主板分开。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/1.jpg"><p>3、连接杜邦线。拆开后，主板上箭头指的串口引脚依次为：3.3V、TX、RX、GND。将赠送的杜邦线依次插上。如图：棕、黑、白、灰。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/2.jpg"><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/3.jpg"><p>4、连接“TTL转USB模块”。线序依次为：空、空、白、黑、灰。即：主板的3.3V不接线，主板的TX接模块的RX，主板的RX接模块的TX，主板的GND接模块的GND。同时，“TTL转USB模块”的电平选择帽子选择5V。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/4.jpg"><p>5、连接电脑。主板通过“TTL转USB模块”连接电脑，但不接电源线。<br>6、运行kylin_bootcode_recovery_tool_v1.4/boot_recovery.exe，软件会自动读取串口号（COM3或COM4或COM5或其他）与波特率（115200），选择上级目录的RTD1296_hwsetting_BOOT_4DDR4_4Gb_s1866.config和dvrboot.exe.bin，勾选LK option。点击Write。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/5.jpg"><p>7、插上电源。右边会跳乱码，耐心等待刷机完成。如果没有乱码，仔细检查前面3、4、5、6、7步骤，按顺序一步一步重新来过，直到看到乱码。有可能会出现提示NG，但是如果看到右边窗口出现大量乱码，一般就是刷成功了，可继续下一步。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/6.jpg"><p>8、关闭软件，拔电源断电，拔“TTL转USB模块”。</p><p>9、找一个U盘并格式化成FAT32文件系统，将xz固件包里的全部文件解压到U盘根目录。看一下，确保U盘里有这4个文件名的文件。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/7.jpg"><p>10、连接。将U盘插到小睿私人云主板上，再将“TTL转USB模块”连到电脑上。打开“hypertrm.exe”。</p><p>11、新建连接。如图依次选择。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/8.jpg"><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/9.jpg"><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/10.jpg"><p>12、安装电脑键盘“Esc”按钮，然后给小睿私人云主板通电。直到出现如下界面，松开“Esc”按钮。</p><p>13、输入代码。<br>13.1、在“hypertrm.exe”界面输入代码printenv，然后回车。<br>13.2、继续输入代码printenv，然后回车。<br>13.3、继续输入代码setenv bootargs “earlycon=uart8250,mmio32,0x98007800 console=ttyS0,115200 loglevel=7 audit=0 root=/dev/mmcblk2p1 rootfstype=ext4 rootwait”，然后回车。<br>13.4、继续输入代码save，然后回车。<br>13.5、继续输入代码go ru，然后回车。</p><p>14、耐心等待，直到刷机完成。中间会重启，要有耐心，做好等10分钟的打算。完成界面如下。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/11.jpg"><p>15、关闭软件，拔电源断电，拔“TTL转USB模块”，拔U盘。</p><p>16、将小睿私人云插上网线，连路由器LAN端，电脑同样连路由器LAN端，登陆路由器管理界面，即可查看到多了一台设备。</p><img src="/2020/01/07/小睿私人云RTD1296刷机步骤/12.jpg"><p>17、putty，hypertrm，winSCP等，登录名root，密码admin。<br>文章转自恩山：<a href="https://www.right.com.cn/forum/thread-833165-1-1.html" target="_blank" rel="noopener">链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、准备工具：&lt;br&gt;①小睿私人云一台。&lt;br&gt;②CH340G TTL转USB模块，淘宝价8.5元包邮送杜邦线。&lt;br&gt;③固件。&lt;code&gt;https://github.com/hanwckf/build-raycloud/releases/tag/v2019-7-8&lt;/c
      
    
    </summary>
    
    
    
      <category term="小睿私人云" scheme="http://jiayie.xyz/tags/%E5%B0%8F%E7%9D%BF%E7%A7%81%E4%BA%BA%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>AdobePhotoshopCC2020绿色便携精简版</title>
    <link href="http://jiayie.xyz/2020/01/06/AdobePhotoshopCC2020%E7%BB%BF%E8%89%B2%E4%BE%BF%E6%90%BA%E7%B2%BE%E7%AE%80%E7%89%88/"/>
    <id>http://jiayie.xyz/2020/01/06/AdobePhotoshopCC2020%E7%BB%BF%E8%89%B2%E4%BE%BF%E6%90%BA%E7%B2%BE%E7%AE%80%E7%89%88/</id>
    <published>2020-01-06T03:37:48.000Z</published>
    <updated>2020-01-06T03:41:40.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="软件说明"><a href="#软件说明" class="headerlink" title="软件说明"></a>软件说明</h3><p>by 423down</p><h1 id="基于官方简体中文语言版组装（采用-CCMaker-exe-下载的官方离线安装包）"><a href="#基于官方简体中文语言版组装（采用-CCMaker-exe-下载的官方离线安装包）" class="headerlink" title="基于官方简体中文语言版组装（采用 CCMaker.exe 下载的官方离线安装包）"></a>基于官方简体中文语言版组装（采用 CCMaker.exe 下载的官方离线安装包）</h1><h1 id="破解激活离线授权（采用-by-Painter-写的离线授权插件-NGLEmp-v0-6-9-0）"><a href="#破解激活离线授权（采用-by-Painter-写的离线授权插件-NGLEmp-v0-6-9-0）" class="headerlink" title="破解激活离线授权（采用 by Painter 写的离线授权插件 NGLEmp v0.6.9.0）"></a>破解激活离线授权（采用 by Painter 写的离线授权插件 NGLEmp v0.6.9.0）</h1><h1 id="免安装绿色便携化（采用老外-by-DoomStorm-写的便携化启动器并加以调整）"><a href="#免安装绿色便携化（采用老外-by-DoomStorm-写的便携化启动器并加以调整）" class="headerlink" title="免安装绿色便携化（采用老外 by DoomStorm 写的便携化启动器并加以调整）"></a>免安装绿色便携化（采用老外 by DoomStorm 写的便携化启动器并加以调整）</h1><h1 id="可以在64位Windows-7使用（官方安装包和直装完整破解版不支持Win7-x64）"><a href="#可以在64位Windows-7使用（官方安装包和直装完整破解版不支持Win7-x64）" class="headerlink" title="可以在64位Windows 7使用（官方安装包和直装完整破解版不支持Win7 x64）"></a>可以在64位Windows 7使用（官方安装包和直装完整破解版不支持Win7 x64）</h1><h1 id="可以离线显示主屏幕（加入CCX-Start-UXP离线主页屏幕）-默认关闭主页屏幕。"><a href="#可以离线显示主屏幕（加入CCX-Start-UXP离线主页屏幕）-默认关闭主页屏幕。" class="headerlink" title="可以离线显示主屏幕（加入CCX-Start-UXP离线主页屏幕） 默认关闭主页屏幕。"></a>可以离线显示主屏幕（加入CCX-Start-UXP离线主页屏幕） 默认关闭主页屏幕。</h1><h1 id="可以打开导出ICO格式图标-CUR鼠标指针（加入ICO插件-ICOFormat-v2-1f1）"><a href="#可以打开导出ICO格式图标-CUR鼠标指针（加入ICO插件-ICOFormat-v2-1f1）" class="headerlink" title="可以打开导出ICO格式图标/CUR鼠标指针（加入ICO插件: ICOFormat v2.1f1）"></a>可以打开导出ICO格式图标/CUR鼠标指针（加入ICO插件: ICOFormat v2.1f1）</h1><h1 id="保留扩展功能主页屏幕组件（新版快速搜索启动面板、新版新建文档界面面板）"><a href="#保留扩展功能主页屏幕组件（新版快速搜索启动面板、新版新建文档界面面板）" class="headerlink" title="保留扩展功能主页屏幕组件（新版快速搜索启动面板、新版新建文档界面面板）"></a>保留扩展功能主页屏幕组件（新版快速搜索启动面板、新版新建文档界面面板）</h1><h1 id="保留所有扩展功能、增效工具、所有滤镜、所有打开新建导出格式支持文件；"><a href="#保留所有扩展功能、增效工具、所有滤镜、所有打开新建导出格式支持文件；" class="headerlink" title="保留所有扩展功能、增效工具、所有滤镜、所有打开新建导出格式支持文件；"></a>保留所有扩展功能、增效工具、所有滤镜、所有打开新建导出格式支持文件；</h1><h1 id="删除创意云库面板组件（CCLibrary）、授权验证保护程序（CCXProcess）"><a href="#删除创意云库面板组件（CCLibrary）、授权验证保护程序（CCXProcess）" class="headerlink" title="删除创意云库面板组件（CCLibrary）、授权验证保护程序（CCXProcess）"></a>删除创意云库面板组件（CCLibrary）、授权验证保护程序（CCXProcess）</h1><h1 id="删除创意云文件同步组件（Creative-Cloud-CoreSync）"><a href="#删除创意云文件同步组件（Creative-Cloud-CoreSync）" class="headerlink" title="删除创意云文件同步组件（Creative Cloud CoreSync）"></a>删除创意云文件同步组件（Creative Cloud CoreSync）</h1><h1 id="删除视频导入输出支持组件（DynamicLinkMediaServer）"><a href="#删除视频导入输出支持组件（DynamicLinkMediaServer）" class="headerlink" title="删除视频导入输出支持组件（DynamicLinkMediaServer）"></a>删除视频导入输出支持组件（DynamicLinkMediaServer）</h1><h1 id="删除Deep-Font-Linguistics-PDFL-Bridge-Spaces-PIP-CCM-IPC-IPCBox-HDBox-LCC；"><a href="#删除Deep-Font-Linguistics-PDFL-Bridge-Spaces-PIP-CCM-IPC-IPCBox-HDBox-LCC；" class="headerlink" title="删除Deep_Font,Linguistics,PDFL,Bridge,Spaces,PIP,CCM, IPC,IPCBox,HDBox,LCC；"></a>删除Deep_Font,Linguistics,PDFL,Bridge,Spaces,PIP,CCM, IPC,IPCBox,HDBox,LCC；</h1><h1 id="删除所有多国语言-示例，搜索，教程，帮助支持，错误报告、服务程序等不必要文件；"><a href="#删除所有多国语言-示例，搜索，教程，帮助支持，错误报告、服务程序等不必要文件；" class="headerlink" title="删除所有多国语言, 示例，搜索，教程，帮助支持，错误报告、服务程序等不必要文件；"></a>删除所有多国语言, 示例，搜索，教程，帮助支持，错误报告、服务程序等不必要文件；</h1><h1 id="更新内置增效工具Adobe-Camera-Raw-12-1-0-351；"><a href="#更新内置增效工具Adobe-Camera-Raw-12-1-0-351；" class="headerlink" title="更新内置增效工具Adobe Camera Raw 12.1.0.351；"></a>更新内置增效工具Adobe Camera Raw 12.1.0.351；</h1><h1 id="修改为默认关闭便携启动器启动及退出进度窗；"><a href="#修改为默认关闭便携启动器启动及退出进度窗；" class="headerlink" title="修改为默认关闭便携启动器启动及退出进度窗；"></a>修改为默认关闭便携启动器启动及退出进度窗；</h1><h1 id="修改为默认以管理员身份请求启动便携启动器。"><a href="#修改为默认以管理员身份请求启动便携启动器。" class="headerlink" title="修改为默认以管理员身份请求启动便携启动器。"></a>修改为默认以管理员身份请求启动便携启动器。</h1><p>使用说明：此版本为绿色便携版，解压缩文件直接运行即可，无需安装</p><p>地址：链接: <a href="https://pan.baidu.com/s/1Ha4c4QI4NuFBsHk7RAmhcw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Ha4c4QI4NuFBsHk7RAmhcw</a> 提取码: 5jae</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;软件说明&quot;&gt;&lt;a href=&quot;#软件说明&quot; class=&quot;headerlink&quot; title=&quot;软件说明&quot;&gt;&lt;/a&gt;软件说明&lt;/h3&gt;&lt;p&gt;by 423down&lt;/p&gt;
&lt;h1 id=&quot;基于官方简体中文语言版组装（采用-CCMaker-exe-下载的官方离线安装包
      
    
    </summary>
    
    
      <category term="软件" scheme="http://jiayie.xyz/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="AdobePhotoshopCC" scheme="http://jiayie.xyz/tags/AdobePhotoshopCC/"/>
    
  </entry>
  
  <entry>
    <title>WIN10激活工具HIWDgen</title>
    <link href="http://jiayie.xyz/2020/01/03/WIN10%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7HIWDgen/"/>
    <id>http://jiayie.xyz/2020/01/03/WIN10%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7HIWDgen/</id>
    <published>2020-01-03T02:05:36.000Z</published>
    <updated>2020-01-03T02:07:40.565Z</updated>
    
    <content type="html"><![CDATA[<p>汉化版的win10激活工具  HWIDgen<br> 下载地址：<a href="https://www.lanzous.com/b0f1872va" target="_blank" rel="noopener">https://www.lanzous.com/b0f1872va</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;汉化版的win10激活工具  HWIDgen&lt;br&gt; 下载地址：&lt;a href=&quot;https://www.lanzous.com/b0f1872va&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.lanzous.com/b0f187
      
    
    </summary>
    
    
      <category term="软件" scheme="http://jiayie.xyz/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="激活工具" scheme="http://jiayie.xyz/tags/%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>一个免费投屏工具慕享</title>
    <link href="http://jiayie.xyz/2020/01/03/%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E6%8A%95%E5%B1%8F%E5%B7%A5%E5%85%B7%E6%85%95%E4%BA%AB/"/>
    <id>http://jiayie.xyz/2020/01/03/%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E6%8A%95%E5%B1%8F%E5%B7%A5%E5%85%B7%E6%85%95%E4%BA%AB/</id>
    <published>2020-01-03T02:03:24.000Z</published>
    <updated>2020-01-03T02:04:54.521Z</updated>
    
    <content type="html"><![CDATA[<p> 软件名慕享<br>下载地址：<a href="https://www.lanzous.com/b0f1872pe" target="_blank" rel="noopener">https://www.lanzous.com/b0f1872pe</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 软件名慕享&lt;br&gt;下载地址：&lt;a href=&quot;https://www.lanzous.com/b0f1872pe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.lanzous.com/b0f1872pe&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="软件" scheme="http://jiayie.xyz/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="软件" scheme="http://jiayie.xyz/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>微信防撤实践</title>
    <link href="http://jiayie.xyz/2019/12/23/%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%AE%9E%E8%B7%B5/"/>
    <id>http://jiayie.xyz/2019/12/23/%E5%BE%AE%E4%BF%A1%E9%98%B2%E6%92%A4%E5%AE%9E%E8%B7%B5/</id>
    <published>2019-12-23T10:13:47.000Z</published>
    <updated>2019-12-23T11:24:32.663Z</updated>
    
    <content type="html"><![CDATA[<p><strong>首先启动微信</strong><br><strong>windows10环境下实践</strong><br>第一步：启动0d点文件<strong>附加</strong>微信，双击进入，点启动，然后按e,找到图片所示文件Chatwin.dll，双击</p><img src="/2019/12/23/微信防撤实践/1.png"><img src="/2019/12/23/微信防撤实践/3.jpg"><img src="/2019/12/23/微信防撤实践/4.jpg"><p><strong>右键中文搜索-智能搜索</strong>，找到 <code>revokemsg</code>回车（<strong>一定要是revokemsg什么都不带的</strong>）</p><img src="/2019/12/23/微信防撤实践/5.png"><p>然后回车</p><img src="/2019/12/23/微信防撤实践/6.jpg"><p><strong>把第一个jnz修改成jmp试试（因为我已经改过了）</strong></p><img src="/2019/12/23/微信防撤实践/7.jpg"><p>第四步：选中复制到可执行文件- 选中</p><img src="/2019/12/23/微信防撤实践/8.jpg"><p>第五步：保存文件。然后就可以替换微信安装文件</p><img src="/2019/12/23/微信防撤实践/9.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;首先启动微信&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;windows10环境下实践&lt;/strong&gt;&lt;br&gt;第一步：启动0d点文件&lt;strong&gt;附加&lt;/strong&gt;微信，双击进入，点启动，然后按e,找到图片所示文件Chatwin.dll，双击&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="微信" scheme="http://jiayie.xyz/categories/%E5%BE%AE%E4%BF%A1/"/>
    
    
      <category term="防撤" scheme="http://jiayie.xyz/tags/%E9%98%B2%E6%92%A4/"/>
    
  </entry>
  
  <entry>
    <title>newifi3新路由3并编译刷入最新官方OpenWrt</title>
    <link href="http://jiayie.xyz/2019/12/23/newifi3%E6%96%B0%E8%B7%AF%E7%94%B13%E5%B9%B6%E7%BC%96%E8%AF%91%E5%88%B7%E5%85%A5%E6%9C%80%E6%96%B0%E5%AE%98%E6%96%B9OpenWrt/"/>
    <id>http://jiayie.xyz/2019/12/23/newifi3%E6%96%B0%E8%B7%AF%E7%94%B13%E5%B9%B6%E7%BC%96%E8%AF%91%E5%88%B7%E5%85%A5%E6%9C%80%E6%96%B0%E5%AE%98%E6%96%B9OpenWrt/</id>
    <published>2019-12-23T09:13:10.000Z</published>
    <updated>2019-12-23T15:17:28.601Z</updated>
    
    <content type="html"><![CDATA[<p>文章转自恩山   原文链接：<a href="https://www.right.com.cn/forum/thread-365936-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-365936-1-1.html</a></p><h3 id="刷机的准备"><a href="#刷机的准备" class="headerlink" title="刷机的准备"></a>刷机的准备</h3><ol><li>breed: 按照大神hackpascal 的这个帖子 <a href="https://www.right.com.cn/forum/thread-342918-1-1.html，" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-342918-1-1.html，</a> 下载好包含breed的解锁包：newifi-d2-jail-break.zip</li><li>ftp软件： 到这个官网下载 ftp32.exe/ftp64.exe 软件: <a href="http://tftpd32.jounin.net/" target="_blank" rel="noopener">http://tftpd32.jounin.net/</a></li><li>ssh/telnet软件： SecureCRT/Putty等。</li><li>固件程序： 自己编译OpenWrt官方固件。(openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin)， 见最后部分。<br>(也可以到OpenWrt官网下载编译好的固件，不过目前看mt7621还在添加代码, 因此自己编译master分支应干不错)<br>官网18.06.1的已编译好固件地址：<a href="https://downloads.openwrt.org/releases/18.06.1/targets/ramips/mt7621/" target="_blank" rel="noopener">https://downloads.openwrt.org/releases/18.06.1/targets/ramips/mt7621/</a><br>没有看到newifi-d2版本，说明之前最新的稳定版并未加入newifi-d2的支持。期待稳定版的要等以后了~~<h3 id="解锁及刷机"><a href="#解锁及刷机" class="headerlink" title="解锁及刷机"></a>解锁及刷机</h3></li><li>开启sshd<br>设置好newifi管理员密码。电脑连接路由器，浏览器输入地址：  <a href="http://192.168.99.1/newifi/ifiwen_hss.html" target="_blank" rel="noopener">http://192.168.99.1/newifi/ifiwen_hss.html</a> ,  页面出现success字样表明开启sshd成功。</li><li>用ssh客户端软件SecureCRT/Putty等， 输入地址192.168.99.1,  用户名root, 密码是设置的管理员密码即可登录进入路由器的控制台。<br>未用“newifi-d2-jail-break.ko”解锁之前的mtd，其中u-boot和fullflash部分不可见：<img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/1.png">用 <code>newifi-d2-jail-break.ko</code>解锁之之后，完整的mtd所有分区：<img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/2.png"></li><li>备份        <code>(请运行第5步的解锁后再备份)</code><br>可以在这里备份，也可以刷入breed后，再进行编程器固件和eeprom固件备份。<br>备份到/tmp目录下面。(注意：/tmp目录是内存映射的目录，可以随便读写，速度快。其它目录因为存储器原因-只写/速度慢-不推荐)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /tmp</span></span><br><span class="line"><span class="comment"># cat /proc/mtd</span></span><br><span class="line"><span class="comment"># dd if=/dev/mtd2  of=2-Factory.bin</span></span><br><span class="line"><span class="comment"># dd if=/dev/mtd3  of=3-fullflash.bin</span></span><br><span class="line"><span class="comment"># dd if=/dev/mtd4  of=4-firmware.bin</span></span><br><span class="line"><span class="comment"># dd if=/dev/mtd9  of=9-nvram.bin</span></span><br></pre></td></tr></table></figure></li></ol><p>文件说明：<br>Factory 就是breed里面的eeprom文件， 含无线相关参数内容。<br>fullflash大小为完整的32M, 为编程器固件。（这个固件和用breed备份的内容有点差别）<br>firmware为 原厂固件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@newifi_A91F:/root]<span class="comment">#cat /proc/mtd</span></span><br><span class="line">dev:   size   erasesize  name</span><br><span class="line">mtd0: 00030000 00010000 <span class="string">"u-boot"</span></span><br><span class="line">mtd1: 00010000 00010000<span class="string">"u-boot-env"</span></span><br><span class="line">mtd2: 00010000 00010000 <span class="string">"Factory"</span></span><br><span class="line">mtd3: 02000000 00010000<span class="string">"fullflash"</span></span><br><span class="line">mtd4: 01fb0000 00010000<span class="string">"firmware"</span></span><br><span class="line">mtd5: 00146b7e 00010000 <span class="string">"kernel"</span></span><br><span class="line">mtd6: 01e49482 00010000 <span class="string">"rootfs"</span></span><br><span class="line">mtd7: 00e30000 00010000<span class="string">"rootfs_data"</span></span><br><span class="line">mtd8: 00020000 00010000<span class="string">"panic_oops"</span></span><br><span class="line">mtd9: 00010000 00010000 <span class="string">"nvram"</span></span><br></pre></td></tr></table></figure><ol start="4"><li><p>将备份的文件上传到PC电脑上<br>在电脑上打开上面下载的tftpd32.exe/tftpd64.exe,   地址选择绑定到 192.168.99.x的地址，目录选择你要备份保存的目录。记下电脑IP地址: 192.168.99.x (这里x是实际的IP地址)<br>在ssh软件的控制台里面，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /tmp</span></span><br><span class="line"><span class="comment"># (完成上面的备份操作得到2-Factory.bin等)</span></span><br><span class="line"><span class="comment">#tftp</span></span><br><span class="line"><span class="comment"># tftp  -p  -l  2-Factory.bin 192.168.99.x</span></span><br><span class="line"><span class="comment"># tftp  -p  -l  3-fullflash.bin 192.168.99.x</span></span><br><span class="line"><span class="comment"># tftp  -p  -l  4-firmware.bin 192.168.99.x</span></span><br><span class="line"><span class="comment"># tftp  -p  -l  9-nvram.bin 192.168.99.x</span></span><br><span class="line">(依次上传备份的几个文件到电脑上)</span><br></pre></td></tr></table></figure></li><li><p>解锁并刷入breed<br>在上述tftp32/64.exe运行的目录下，拷贝入前面下载的解锁文件：<code>newifi-d2-jail-break.ko</code>(注意，前面下载的是压缩包，需要解压得到)， 为了方便，重命名为<code>d2.ko</code><br>在ssh控制台，输入如下命令解锁并刷入breed:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cd /tmp</span></span><br><span class="line"><span class="comment"># tftp -g -r d2.ko 192.168.99.x</span></span><br><span class="line"><span class="comment"># insmod d2.ko</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>(这里不能断电，建议多等等个几分钟，直到刷机完成并自动重启)</strong><br>( 此时 SSH 会停止响应，因为 <code>newifi-d2-jail-break.ko</code> 会冻结系统的其他功能，强制写入 <code>Newifi D2</code> 专用版 <code>Breed</code> 到 <code>Flash</code>)<br>成功后路由器会自动重启。断电后按复位健/USB键开机均可进入 Breed.</p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/3.png"><ol start="6"><li>进入breed<br>断电，按住usb键或者reset不放，开机，等待电源灯闪烁，此时进入breed.<br>电脑连接路由，浏览器输入： <a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a><br>此时也可以备份编程器固件和eeprom。<img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/4.png"></li><li>在breed界面， 刷入OpenWrt官方固件。然后重启即可。<br>（一般不需要恢复eeprom，如果想尝试其它人的eeprom，可以在breed界面刷入）<img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/5.png"><h3 id="编译OpenWrt官方固件"><a href="#编译OpenWrt官方固件" class="headerlink" title="编译OpenWrt官方固件"></a>编译OpenWrt官方固件</h3></li><li>编译环境准备，请查看网上教程。</li><li>检出代码并配置选项:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/openwrt/openwrt</span><br><span class="line"><span class="variable">$cd</span> openwrt</span><br><span class="line">$./scripts/feeds update  -a</span><br><span class="line">$./scripts/feeds install  -a</span><br><span class="line">$ make menuconfig</span><br><span class="line">    配置需要的选项，主要是base-system中的usb块设备，luci, kernel中的本地语言支持等。</span><br><span class="line">$ make download</span><br><span class="line">$ make -j5</span><br></pre></td></tr></table></figure></li></ol><p><strong>编译好的固件文件在 <code>bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin</code></strong></p><ol start="3"><li>选项说明：<img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/6.png"></li></ol><p><strong>Base System –&gt; block块设备支持：</strong></p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/7.png"><p><strong>Kenel models –&gt; Usb Support, 选择usb2/usb3</strong></p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/8.png"><p><strong>Kenel models –&gt;naive language support, 选择code 936, 简体中文支持</strong></p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/9.png"><p><strong>Luci-modules-translation , 选择简体中文支持：</strong></p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/10.png"><p><strong>MT7603驱动选择：”kernel modules  —-&gt; wireless drivers”</strong><br>(这里有两种驱动，一个是MT76开源驱动，一个是自带的7603驱动)</p><p><strong>MT76开源驱动： <a href="https://github.com/openwrt/mt76" target="_blank" rel="noopener">https://github.com/openwrt/mt76</a></strong></p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/11.png"><p>其它选项也可以自行添加，也可以下载别人编译好的ipk文件安装。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><ol><li><p>目前的OpenWrt 主分支master已经有了newifi-d2的支持，但是新的稳定版未发布，喜欢干净的，自己折腾的，可以试试。</p></li><li><p>基本上，按照这样的顺序操作，路由器上的eeprom是不需要事后再进入breed中恢复一次的。<br> 当然如果无线以及mac地址不正常，可以进breed中，恢复一下eeprom, 并设置路由器的mac地址。</p></li><li><p>刷入后无线功能正常，但是速率等未进行测试。 最后附上一张编译好刷入的截图：</p><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/12.png"><img src="/2019/12/23/newifi3新路由3并编译刷入最新官方OpenWrt/13.png"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章转自恩山   原文链接：&lt;a href=&quot;https://www.right.com.cn/forum/thread-365936-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.right.com.cn/for
      
    
    </summary>
    
    
      <category term="Openwrt" scheme="http://jiayie.xyz/categories/Openwrt/"/>
    
      <category term="路由" scheme="http://jiayie.xyz/categories/Openwrt/%E8%B7%AF%E7%94%B1/"/>
    
    
      <category term="Openwrt" scheme="http://jiayie.xyz/tags/Openwrt/"/>
    
  </entry>
  
  <entry>
    <title>IOS免密码安装小火箭</title>
    <link href="http://jiayie.xyz/2019/12/14/IOS%E5%85%8D%E5%AF%86%E7%A0%81%E5%AE%89%E8%A3%85%E5%B0%8F%E7%81%AB%E7%AE%AD/"/>
    <id>http://jiayie.xyz/2019/12/14/IOS%E5%85%8D%E5%AF%86%E7%A0%81%E5%AE%89%E8%A3%85%E5%B0%8F%E7%81%AB%E7%AE%AD/</id>
    <published>2019-12-14T14:33:04.000Z</published>
    <updated>2019-12-14T14:38:36.926Z</updated>
    
    <content type="html"><![CDATA[<h3 id="风险自担：可能会账户锁定"><a href="#风险自担：可能会账户锁定" class="headerlink" title="风险自担：可能会账户锁定"></a>风险自担：可能会账户锁定</h3><p><strong>再次提醒！禁止登录iCloud，只能登录App Store苹果市场！</strong><br>下载Shadowrocket安装包 <a href="https://share.weiyun.com/5zFZo9R" target="_blank" rel="noopener">（Shadowrocket-2.1.10.ipa）</a> <strong>密码：kaqjrp</strong><br>下载pp助手，通过电脑pp助手把ipa安装到你的iPhone<br>iPhone打开Shadowrocket免密使用<br>IOS版本小火箭（Shadowrocket）免密安装教程到此结束。<br><a href="https://itren.org/100.html" target="_blank" rel="noopener">AppStore账户：</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号：jiang5733@aliyun.com</span><br><span class="line">注意：Bbvv1122</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;风险自担：可能会账户锁定&quot;&gt;&lt;a href=&quot;#风险自担：可能会账户锁定&quot; class=&quot;headerlink&quot; title=&quot;风险自担：可能会账户锁定&quot;&gt;&lt;/a&gt;风险自担：可能会账户锁定&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;再次提醒！禁止登录iCloud，只能登录Ap
      
    
    </summary>
    
    
      <category term="IOS" scheme="http://jiayie.xyz/categories/IOS/"/>
    
    
      <category term="小火箭" scheme="http://jiayie.xyz/tags/%E5%B0%8F%E7%81%AB%E7%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>给VPS添加用户并赋予sudo权限</title>
    <link href="http://jiayie.xyz/2019/12/14/%E7%BB%99VPS%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%B9%B6%E8%B5%8B%E4%BA%88sudo%E6%9D%83%E9%99%90/"/>
    <id>http://jiayie.xyz/2019/12/14/%E7%BB%99VPS%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%B9%B6%E8%B5%8B%E4%BA%88sudo%E6%9D%83%E9%99%90/</id>
    <published>2019-12-14T14:01:57.000Z</published>
    <updated>2019-12-14T14:09:42.274Z</updated>
    
    <content type="html"><![CDATA[<p>前言：在linux操作系统下，它不像Windows，是没有回收站的，所以你改动一个文件前，最好提前用cp命令将其备份一下，另外linux操作环境下root权限是最高的，看起来很舒服但是可能使用不当会带来很严重的后果，所以为了安全，推荐使用sudo用户，这样可以大大降低风险。</p><p>本文主要根据网上搜索到的资料，整理一下实现此目标的较佳方法。</p><h3 id="一、根据VPS服务商给出的数据使用SSH协议登陆VPS后台"><a href="#一、根据VPS服务商给出的数据使用SSH协议登陆VPS后台" class="headerlink" title="一、根据VPS服务商给出的数据使用SSH协议登陆VPS后台"></a>一、根据VPS服务商给出的数据使用SSH协议登陆VPS后台</h3><p>可选的客户端有很多，如果是Windows，推荐使用Xshell6，当然你也可以选择使用Putty，以root用户身份登陆VPS后台。</p><h4 id="二、给你的VPS添加用户"><a href="#二、给你的VPS添加用户" class="headerlink" title="二、给你的VPS添加用户"></a>二、给你的VPS添加用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m user</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>user这里代表你设置的用户名，你也可以设置别名，<code>-m</code>表示系统会为你在<code>/root</code>下创建<code>/root/user</code>目录，不加则没有这个效果。</p><h4 id="三、给上一步添加的用户设置登陆密码"><a href="#三、给上一步添加的用户设置登陆密码" class="headerlink" title="三、给上一步添加的用户设置登陆密码"></a>三、给上一步添加的用户设置登陆密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd user</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>Linux下输入密码时，命令行下不会显示，你挑个自己熟悉的密码连输两遍，他就会提示password更新完毕。</p><h4 id="四、安装sudo"><a href="#四、安装sudo" class="headerlink" title="四、安装sudo"></a>四、安装sudo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get -y install sudo //Debian/Ubuntu这样安装sudo</span><br><span class="line"></span><br><span class="line">yum update &amp;&amp; yum -y install sudo //Centos这样安装sudo</span><br></pre></td></tr></table></figure><h4 id="五、赋予user用户sudo权限"><a href="#五、赋予user用户sudo权限" class="headerlink" title="五、赋予user用户sudo权限"></a>五、赋予user用户sudo权限</h4><p><strong>1. 切换工作目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/sudoers.d</span><br></pre></td></tr></table></figure><p><strong>2. 创建以用户名为名的文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim user</span><br><span class="line"></span><br><span class="line">user ALL=(ALL) ALL //添加此行后保存文件</span><br></pre></td></tr></table></figure><p><strong>3. 修改文件的权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 440 /etc/sudoers.d/user</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>权限这里，r代表读权限，权值是4；w代表是写权限，权值是2；x代表执行权限，权值是1。注意查看root位置有没有w权限。<br><strong>4. 给新建用户指定shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -i //切换至root用户</span><br><span class="line"></span><br><span class="line">usermod -s /bin/bash user //指定user用户shell为/bin/bash</span><br></pre></td></tr></table></figure><p><em>说明：</em>如果不这样指定，以sudo用户操作的时候前面不显示当前用户名和路径。</p><h4 id="六、使用sudo用户登录"><a href="#六、使用sudo用户登录" class="headerlink" title="六、使用sudo用户登录"></a>六、使用sudo用户登录</h4><p><strong>1.在Xshell里新建会话</strong></p><ul><li>服务器IP：0.0.0.0</li><li>端口号：Port（常见的都是22）</li><li>用户名：user （之前创建的user sudo用户）</li><li>密码：password（你为user设置的登陆密码）</li></ul><p><strong>2.sudo用户切换到root用户</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p><em>注意：</em>如果在输入 <code>sudo -i</code> 过程中有输错的情况，你可以同时按着<code>Ctrl+Backspace</code>退格键来删除或者按着<code>Ctrl+u</code>键，直接清除所有已输入的字符。<br><strong>3.从root用户切换到sudo用户</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su user</span><br></pre></td></tr></table></figure><p><strong>4.以user身份（sudo用户）执行命令时暂时用sudo提权，赋予root权限来执行命令以保证不出错</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="七、删除sudo用户"><a href="#七、删除sudo用户" class="headerlink" title="七、删除sudo用户"></a>七、删除sudo用户</h4><p><strong>1.取消user用户sudo权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /etc/sudoers.d/user</span><br></pre></td></tr></table></figure><p><strong>2.删除创建的user用户</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -r user</span><br></pre></td></tr></table></figure><p>文章转自：<a href="https://ssu.tw/index.php/archives/4/" target="_blank" rel="noopener">https://ssu.tw/index.php/archives/4/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言：在linux操作系统下，它不像Windows，是没有回收站的，所以你改动一个文件前，最好提前用cp命令将其备份一下，另外linux操作环境下root权限是最高的，看起来很舒服但是可能使用不当会带来很严重的后果，所以为了安全，推荐使用sudo用户，这样可以大大降低风险。
      
    
    </summary>
    
    
      <category term="linux" scheme="http://jiayie.xyz/categories/linux/"/>
    
    
      <category term="添加用户" scheme="http://jiayie.xyz/tags/%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>使用docker快速部署shadowsocks-libev+v2ray-plugin代理</title>
    <link href="http://jiayie.xyz/2019/12/14/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2shadowsocks-libev-v2ray-plugin%E4%BB%A3%E7%90%86/"/>
    <id>http://jiayie.xyz/2019/12/14/%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2shadowsocks-libev-v2ray-plugin%E4%BB%A3%E7%90%86/</id>
    <published>2019-12-14T13:34:15.000Z</published>
    <updated>2019-12-14T14:01:33.210Z</updated>
    
    <content type="html"><![CDATA[<p>前言：Shadowsocks-libev是一款安全、轻量和快速的代理协议。它是由clowwindy发明，后同很多技术大牛一起开发，原作者被喝茶以后，因为项目是开源的，所以很多人fork后继续开发，现在主要由madeye负责更新维护。shadowsocks注重加密，数据包几乎没有特征，而shadowsocksr注重混淆，倾向无加密化，现在已经停更，所以不再推荐使用。之前的simple-obfs插件已经弃更，在github项目里也被标识为不推荐使用，转之项目维护者推荐使用shadowsocks-libev+v2ray-plugin插件。</p><p>本文会知无不言地介绍一下使用秋水逸冰为之制作的docker镜像快速部署shadowsocks-libev+v2ray-plugin，主要介绍ws和ws+tls模式。</p><h4 id="说明：本文使用到的各种资源都是各位技术大牛们敲代码洒下汗水一点点换来的，在此对各位用爱发电的大佬们表示感谢！"><a href="#说明：本文使用到的各种资源都是各位技术大牛们敲代码洒下汗水一点点换来的，在此对各位用爱发电的大佬们表示感谢！" class="headerlink" title="说明：本文使用到的各种资源都是各位技术大牛们敲代码洒下汗水一点点换来的，在此对各位用爱发电的大佬们表示感谢！"></a>说明：本文使用到的各种资源都是各位技术大牛们敲代码洒下汗水一点点换来的，在此对各位用爱发电的大佬们表示感谢！</h4><p><strong>条件准备：</strong></p><ul><li>一台墙外VPS</li><li>一台安装好SSH客户端的PC电脑</li><li>只用ws就不用域名，加tls就需要准备一个域名</li><li>注册好Cloudflare账号</li><li>一位会使用基本的Linux命令的自然人<h3 id="一、安装docker"><a href="#一、安装docker" class="headerlink" title="一、安装docker"></a>一、安装docker</h3><h4 id="1-1-以root用户登录，执行一键脚本安装docker"><a href="#1-1-以root用户登录，执行一键脚本安装docker" class="headerlink" title="1.1 以root用户登录，执行一键脚本安装docker"></a>1.1 以root用户登录，执行一键脚本安装docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim //以Debian系为例，升级源并安装软件</span><br><span class="line"></span><br><span class="line">wget -qO- get.docker.com | bash //执行此命令等候自动安装docker</span><br></pre></td></tr></table></figure></li></ul><p><strong>说明：</strong>推荐使用KVM架构的VPS，OpenVZ架构的VPS不支持安装docker，另外CentOS8好像还不受此脚本支持来安装docker。</p><h4 id="1-2-对docker的一些命令操作"><a href="#1-2-对docker的一些命令操作" class="headerlink" title="1.2 对docker的一些命令操作"></a>1.2 对docker的一些命令操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker version //查看docker安装版本等信息</span><br><span class="line"></span><br><span class="line">systemctl start docker //启动docker服务</span><br><span class="line"></span><br><span class="line">systemctl status docker //查看docker运行状态</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker //将docker服务加入开机自启动</span><br></pre></td></tr></table></figure><h3 id="二、用docker部署shadowsocks-libev-v2ray-plugin（ws类型，不用域名）"><a href="#二、用docker部署shadowsocks-libev-v2ray-plugin（ws类型，不用域名）" class="headerlink" title="二、用docker部署shadowsocks-libev+v2ray-plugin（ws类型，不用域名）"></a>二、用docker部署shadowsocks-libev+v2ray-plugin（ws类型，不用域名）</h3><h4 id="2-1-创建配置文件"><a href="#2-1-创建配置文件" class="headerlink" title="2.1 创建配置文件"></a>2.1 创建配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/shadowsocks-libev //在/etc目录下创建shadowsocks-libev目录</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/shadowsocks-libev //工作空间切换至此</span><br><span class="line"></span><br><span class="line">vim config.json //创建并开始编辑名为config.json的配置文件</span><br><span class="line"></span><br><span class="line">//下为配置文件示例，请添加至文件</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line"><span class="string">"server_port"</span>:9000,</span><br><span class="line"><span class="string">"method"</span>:<span class="string">"aes-256-gcm"</span>,</span><br><span class="line"><span class="string">"timeout"</span>:300,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"password0"</span>,</span><br><span class="line"><span class="string">"fast_open"</span>:<span class="literal">false</span>,</span><br><span class="line"><span class="string">"nameserver"</span>:<span class="string">"8.8.8.8"</span>,</span><br><span class="line"><span class="string">"mode"</span>:<span class="string">"tcp_and_udp"</span>,</span><br><span class="line"><span class="string">"plugin"</span>:<span class="string">"v2ray-plugin"</span>,</span><br><span class="line"><span class="string">"plugin_opts"</span>:<span class="string">"server"</span></span><br><span class="line">&#125;</span><br><span class="line">//上为配置文件示例，添加至文件后保存并退出</span><br></pre></td></tr></table></figure><ul><li><p>说明：<code>server</code>后面默认填<code>0.0.0.0</code>，请不要修改。</p></li><li><p>关于更多参数用法和说明请参考：<a href="https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/shadowsocks-libev.asciidoc" target="_blank" rel="noopener">这个链接</a></p></li><li><p>值得注意的是：如果你配置文件里<code>&quot;plugin_opts&quot;:&quot;server;mux=0&quot;</code>这样配置，那么你可以使用Quantumult X来添加节点使用。</p><h4 id="2-2-用docker结合上面的配置文件创建并启动容器"><a href="#2-2-用docker结合上面的配置文件创建并启动容器" class="headerlink" title="2.2 用docker结合上面的配置文件创建并启动容器"></a>2.2 用docker结合上面的配置文件创建并启动容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name ss-libev --restart always -p 9000:9000 -p 9000:9000/udp -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev</span><br></pre></td></tr></table></figure></li><li><p>docker run：开始运行一个容器</p></li><li><p>-d 参数：容器以后台运行并输出容器ID</p></li><li><p>—name 参数：给容器分配一个识别符，方便将来的启动，停止，删除等操作</p></li><li><p>—restart 参数：配置容器启动类型，always即为docker服务重新启动时自动启动本容器</p></li><li><p>-p 参数：容器的9000端口映射到本机的9000端口。默认是TCP映射，当需要UDP映射时候，那就再追加一次UDP的映射。冒号后面是容器端口，冒号前面是宿主机端口，可以写成一致，也可以写成不一致</p></li><li><p>-v 参数：挂载卷（volume），冒号后面是容器的路径，冒号前面是宿主机的路径，可以写成一致，也可以写成不一致</p></li><li><p>teddysun/shadowsocks-libev：这是从docker拉取回来的镜像路径</p><h4 id="2-3-后期容器处理常用命令"><a href="#2-3-后期容器处理常用命令" class="headerlink" title="2.3 后期容器处理常用命令"></a>2.3 后期容器处理常用命令</h4><p>记前面<code>docker run</code>后面<code>--name ss-libev</code>中的<code>ss-libev</code>为<code>$name</code>，其代表容器识别符，也就是<code>$name=ss-libev</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker ps -as //查看容器在线状态及大小，在这里你一般可以看到<span class="variable">$name</span>=ss-libev</span><br><span class="line"></span><br><span class="line">docker logs <span class="variable">$name</span> //查看此容器的运行输出日志</span><br><span class="line"></span><br><span class="line">docker restart <span class="variable">$name</span> //重新启动容器，一般在修改除端口外的配置后使用使修改生效</span><br><span class="line"></span><br><span class="line">docker stop <span class="variable">$name</span> //停止此容器的运行</span><br><span class="line"></span><br><span class="line">docker rm <span class="variable">$name</span> //移除此容器</span><br><span class="line"></span><br><span class="line">docker stats --no-stream //查看docker容器占用CPU，内存等信息</span><br></pre></td></tr></table></figure></li></ul><h3 id="三、用docker部署shadowsocks-libev-v2ray-plugin（ws-tls类型，需要域名）"><a href="#三、用docker部署shadowsocks-libev-v2ray-plugin（ws-tls类型，需要域名）" class="headerlink" title="三、用docker部署shadowsocks-libev+v2ray-plugin（ws+tls类型，需要域名）"></a>三、用docker部署shadowsocks-libev+v2ray-plugin（ws+tls类型，需要域名）</h3><h4 id="3-1-用acme-sh脚本申请证书"><a href="#3-1-用acme-sh脚本申请证书" class="headerlink" title="3.1 用acme.sh脚本申请证书"></a>3.1 用acme.sh脚本申请证书</h4><p>关于这个，之前专门水过一篇文章：用acme.sh脚本申请证书并自动续更 ，还请麻烦前往查看，下面默认你已经获取到<code>Clouflare api key</code>，并且也已经安装好<code>acme.sh</code>脚本。</p><h4 id="3-2-安装证书到放置ss配置文件的目录"><a href="#3-2-安装证书到放置ss配置文件的目录" class="headerlink" title="3.2 安装证书到放置ss配置文件的目录"></a>3.2 安装证书到放置ss配置文件的目录</h4><p>假设你的是域名是<code>mydomain.me</code>，且已经在<code>Cloudflare</code>上设置好<code>A记录解析</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kdir /etc/ssplugin &amp;&amp; <span class="built_in">cd</span> /etc/ssplugin //创建目录并切换至此</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">"slfjksjffjfhfhkjhfksjf"</span> //此处替换成你自己的Key</span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">"yourcloudflare@gmail.com"</span> //此处填写你注册Cloudflare使用的邮箱账号</span><br><span class="line"></span><br><span class="line">acme.sh --issue --dns dns_cf -d mydomain.me -k ec-256 //用脚本申请证书</span><br><span class="line"></span><br><span class="line">acme.sh --installcert -d mydomain.me --fullchain-file /etc/ssplugin/plugin.crt --key-file /etc/ssplugin/plugin.key --ecc //安装证书到/etc/ssplugin目录下</span><br></pre></td></tr></table></figure><h4 id="3-3-创建配置文件"><a href="#3-3-创建配置文件" class="headerlink" title="3.3 创建配置文件"></a>3.3 创建配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/ssplugin //其实上一步之后应该就是在这个目录里了</span><br><span class="line"></span><br><span class="line">vim config.json //创建并开始编辑配置文件</span><br><span class="line"></span><br><span class="line">//下面是配置文件示例</span><br><span class="line">&#123;</span><br><span class="line">&quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">&quot;server_port&quot;:9000,</span><br><span class="line">&quot;password&quot;:&quot;password0&quot;,</span><br><span class="line">&quot;timeout&quot;:300,</span><br><span class="line">&quot;method&quot;:&quot;aes-256-gcm&quot;,</span><br><span class="line">&quot;fast_open&quot;:false,</span><br><span class="line">&quot;nameserver&quot;:&quot;8.8.8.8&quot;,</span><br><span class="line">&quot;mode&quot;:&quot;tcp_and_udp&quot;,</span><br><span class="line">&quot;plugin&quot;:&quot;v2ray-plugin&quot;,</span><br><span class="line">&quot;plugin_opts&quot;:&quot;server;tls;host=mydomain.me;cert=/etc/shadowsocks-libev/plugin.crt;key=/etc/shadowsocks-libev/plugin.key&quot;</span><br><span class="line">&#125;</span><br><span class="line">//上面是配置文件示例，请添加至文件后保存并退出。</span><br></pre></td></tr></table></figure><p><strong>说明</strong>：server后面的 0.0.0.0 不要修改，plugin_opts后面的证书位置配置也不要修改，尽管你证书明明是放在 /etc/ssplugin 目录下，尽管你宿主机里没有创建 /etc/shadowsocks-libev 目录，这里cert和key的路径是写死的，当然证书名是要根据你上一步生成的。</p><h4 id="3-4-用docker配合配置文件创建并启动容器"><a href="#3-4-用docker配合配置文件创建并启动容器" class="headerlink" title="3.4 用docker配合配置文件创建并启动容器"></a>3.4 用docker配合配置文件创建并启动容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name ss-plugin --restart always -p 9000:9000 -p 9000:9000/udp -v /etc/ssplugin:/etc/shadowsocks-libev teddysun/shadowsocks-libev</span><br></pre></td></tr></table></figure><ul><li>docker run：开始运行一个容器</li><li>-d 参数：容器以后台运行并输出容器ID</li><li>—name 参数：给容器分配一个识别符，方便将来的启动，停止，删除等操作</li><li>—restart 参数：配置容器启动类型，always即为docker服务重新启动时自动启动本容器</li><li>-p 参数：容器的9000端口映射到本机的9000端口。默认是TCP映射，当需要UDP映射时候，那就再追加一次UDP的映射。冒号后面是容器端口，冒号前面是宿主机端口，可以写成一致，也可以写成不一致</li><li>-v 参数：挂载卷（volume），冒号后面是容器的路径，冒号前面是宿主机的路径，可以写成一致，也可以写成不一致</li><li>teddysun/shadowsocks-libev：这是从docker拉取回来的镜像路径<h4 id="3-5-后期docker容器常用处理命令"><a href="#3-5-后期docker容器常用处理命令" class="headerlink" title="3.5 后期docker容器常用处理命令"></a>3.5 后期docker容器常用处理命令</h4>记前面<code>docker run</code>后面<code>--name ss-plugin</code>中的<code>ss-plugin</code>为<code>$name</code>，其代表容器识别符，也就是<code>$name=ss-plugin</code>。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker ps -as //查看容器在线状态及大小，在这里你一般可以看到<span class="variable">$name</span>=ss-plugin</span><br><span class="line"></span><br><span class="line">docker logs <span class="variable">$name</span> //查看此容器的运行输出日志</span><br><span class="line"></span><br><span class="line">docker restart <span class="variable">$name</span> //重新启动容器，一般在修改除端口外的配置后使用使修改生效</span><br><span class="line"></span><br><span class="line">docker stop <span class="variable">$name</span> //停止此容器的运行</span><br><span class="line"></span><br><span class="line">docker rm <span class="variable">$name</span> //移除此容器</span><br><span class="line"></span><br><span class="line">docker stats --no-stream //查看docker容器占用CPU，内存等信息</span><br></pre></td></tr></table></figure></li></ul><h3 id="四、用docker部署shadowsocks-libev-v2ray-plugin（ws-caddy提供的tls，可选套cdn）"><a href="#四、用docker部署shadowsocks-libev-v2ray-plugin（ws-caddy提供的tls，可选套cdn）" class="headerlink" title="四、用docker部署shadowsocks-libev+v2ray-plugin（ws+caddy提供的tls，可选套cdn）"></a>四、用docker部署shadowsocks-libev+v2ray-plugin（ws+caddy提供的tls，可选套cdn）</h3><h4 id="4-1-证书安装情况跟上面一致"><a href="#4-1-证书安装情况跟上面一致" class="headerlink" title="4.1 证书安装情况跟上面一致"></a>4.1 证书安装情况跟上面一致</h4><p>这种方式是受推荐使用的，也是借鉴v2ray安装ws+tls而来。其中申请证书什么的跟上面一致，请参考：<a href="https://ssu.tw/index.php/archives/8/" target="_blank" rel="noopener">这个链接</a>。<br>基于此，下面默认你已经为<code>mydomain.me</code>申请好证书放置在<code>/root/.acme.sh</code>内部目录下，但还没安装证书到哪个位置。</p><h4 id="4-2-创建ss的配置文件"><a href="#4-2-创建ss的配置文件" class="headerlink" title="4.2 创建ss的配置文件"></a>4.2 创建ss的配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ssplugin &amp;&amp; <span class="built_in">cd</span> /etc/ssplugin //创建目录并切换至此</span><br><span class="line"></span><br><span class="line">vim config.json //创建并开始编辑config.json配置文件</span><br><span class="line"></span><br><span class="line">//下面是配置文件示例，请添加至文件</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"server"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line"><span class="string">"server_port"</span>:9000,</span><br><span class="line"><span class="string">"method"</span>:<span class="string">"aes-256-gcm"</span>,</span><br><span class="line"><span class="string">"timeout"</span>:300,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"password0"</span>,</span><br><span class="line"><span class="string">"fast_open"</span>:<span class="literal">false</span>,</span><br><span class="line"><span class="string">"nameserver"</span>:<span class="string">"8.8.8.8"</span>,</span><br><span class="line"><span class="string">"mode"</span>:<span class="string">"tcp_and_udp"</span>,</span><br><span class="line"><span class="string">"plugin"</span>:<span class="string">"v2ray-plugin"</span>,</span><br><span class="line"><span class="string">"plugin_opts"</span>:<span class="string">"server;path=/ray"</span></span><br><span class="line">&#125;</span><br><span class="line">//上面是配置文件示例，请添加至文件后保存并退出</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>因为要监听本地，所以server后面地址填127.0.0.1，所以9000端口不对外开放，此处只是在ws的配置上加了个path参数，tls要由后面的caddy来支持。</p><h4 id="4-4-安装caddy"><a href="#4-4-安装caddy" class="headerlink" title="4.4 安装caddy"></a>4.4 安装caddy</h4><p>执行下面一条命令安装<code>caddy</code>，也就是以个人身份申请使用<code>caddy</code>的二进制，并把它放到<code>/usr/local/bin</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root //切换到/root目录</span><br><span class="line"></span><br><span class="line">wget -qO- https://getcaddy.com | bash -s personal //下载caddy的二进制并放置在/usr/<span class="built_in">local</span>/bin目录下</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>如果你用的Centos7安装到这一步了，执行完上面的命令会有报错，你可以先 <code>ls /usr/local/bin</code> 先查看下caddy的二进制有没有下载到本地了，如果有的话，那么执行下caddy你可能会遇到<code>command not found</code>的反馈结果，原因应该是上面这个安装脚本在Centos7下没法把caddy所在的路径<code>/usr/local/bin</code>加入到环境变量里，那么解决办法有两个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第一：在4.7使用 nohup /usr/<span class="built_in">local</span>/bin/caddy -conf /root/caddy/Caddyfile &amp; 避免报错。</span><br><span class="line"></span><br><span class="line">第二：这一步就开始把/usr/<span class="built_in">local</span>/bin加入<span class="variable">$PATH</span>的取值内，具体操作步骤如下：</span><br><span class="line"></span><br><span class="line">vim /root/.bash_profile</span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin //加入此行，文件内应该是有 <span class="built_in">export</span> PATH这一行的。</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /root/.bash_profile //使环境变量生效</span><br></pre></td></tr></table></figure><h4 id="4-5-配置caddy证书"><a href="#4-5-配置caddy证书" class="headerlink" title="4.5 配置caddy证书"></a>4.5 配置caddy证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir caddy &amp;&amp; <span class="built_in">cd</span> caddy //在/root目录下创建caddy目录并切换至此</span><br><span class="line"></span><br><span class="line">acme.sh --installcert -d mydomain.me --fullchain-file /root/caddy/caddy.crt --key-file /root/caddy/caddy.key --ecc //安装证书和key到/root/caddy目录下</span><br></pre></td></tr></table></figure><h4 id="4-6-创建caddy主配置文件Caddyfile"><a href="#4-6-创建caddy主配置文件Caddyfile" class="headerlink" title="4.6 创建caddy主配置文件Caddyfile"></a>4.6 创建caddy主配置文件Caddyfile</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim Caddyfile //创建文件并开始编辑</span><br><span class="line"></span><br><span class="line">//下面是caddy配置文件示例，请添加至文件</span><br><span class="line">mydomain.me:443 &#123;</span><br><span class="line">  gzip</span><br><span class="line">  tls /root/caddy/caddy.crt /root/caddy/caddy.key</span><br><span class="line">  <span class="built_in">log</span> /root/caddy/caddy.log</span><br><span class="line">  proxy / https://baidu.com</span><br><span class="line">  proxy /ray 127.0.0.1:9000 &#123;</span><br><span class="line">    websocket</span><br><span class="line">    header_upstream -Origin</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">//上面是配置文件示例，请按照实际情况替换填写</span><br></pre></td></tr></table></figure><p><strong>说明:</strong>此处只需要关注路径和端口号，<code>9000</code>是你<code>/etc/ssplugin/config.json</code>目录下配置的，<code>/ray</code>是你这个文件内<code>plugin_opts</code>后面的<code>path=/ray</code>，请注意替换。</p><h4 id="4-7-让caddy搭配Caddyfile文件运行起来"><a href="#4-7-让caddy搭配Caddyfile文件运行起来" class="headerlink" title="4.7 让caddy搭配Caddyfile文件运行起来"></a>4.7 让caddy搭配Caddyfile文件运行起来</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nohup caddy -conf /root/caddy/Caddyfile &amp; //让caddy在后台运行起来</span><br><span class="line"></span><br><span class="line">//直接回车让caddy服务后台挂起</span><br><span class="line"></span><br><span class="line">cat nohup.out //可以查看输出的日志</span><br><span class="line"></span><br><span class="line">cat /root/caddy/caddy.log //可以查看caddy运行产生的日志</span><br></pre></td></tr></table></figure><h4 id="4-8-开启Cloudflare的CDN保护，开启SSL-TLS的Full模式"><a href="#4-8-开启Cloudflare的CDN保护，开启SSL-TLS的Full模式" class="headerlink" title="4.8 开启Cloudflare的CDN保护，开启SSL/TLS的Full模式"></a>4.8 开启Cloudflare的CDN保护，开启SSL/TLS的Full模式</h4><img src="/2019/12/14/使用docker快速部署shadowsocks-libev-v2ray-plugin代理/1.png"><img src="/2019/12/14/使用docker快速部署shadowsocks-libev-v2ray-plugin代理/2.png"><p><strong>值得注意的是：</strong>使用<code>ss-libev+ws+tls</code>，能否套<code>CDN</code>并不依赖<code>web</code>服务器，就像如果是第二种配置，没有使用caddy，配置文件里直接配置证书和key路径的那种，你可以设置特殊端口，比如443和8443，这些端口的https流量是可以经cloudflare转发的。但是使用web服务器也可以套CDN，而且伪装的比较好，可能就是稍微有些麻烦吧。</p><h3 id="五、客户端配置"><a href="#五、客户端配置" class="headerlink" title="五、客户端配置"></a>五、客户端配置</h3><h4 id="5-1-Win端"><a href="#5-1-Win端" class="headerlink" title="5.1 Win端"></a>5.1 Win端</h4><ul><li><p>先到<a href="https://github.com/shadowsocks/v2ray-plugin/releases" target="_blank" rel="noopener">这个链接</a>下载v2ray-plugin-windows-amd64的包</p></li><li><p>下载完成后解压到<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">shadowsocks-windows</a>的目录下</p></li><li><p>重命名为v2ray-plugin.exe文件</p></li><li><p>插件程序：v2ray-plugin</p></li><li><p>如果选的是第一种，<code>v2ray-plugin</code>的ws类型，插件选项这里可以留空</p></li><li><p>如果选的是第二种，v2ray-plugin的<code>ws+tls</code>类型，插件选项这里填 <code>tls;host=mydomain.me</code></p></li><li><p>如果选的是第三种，v2ray-plugin的<code>ws+caddy</code>提供的tls类型，插件选项这里填 <code>tls;host=mydomain.me;path=/ray</code>。</p></li><li><p>第三种配置建议是开启CDN，然后本地配置两个节点，服务器那里写IP就是<code>ss+ws+tls</code>，写域名就是<code>ss+ws+tls+cdn</code>。</p></li><li><p>值得注意的是：如果你这么设置<code>&quot;plugin_opts&quot;:&quot;server;mux=0&quot;</code>，你就可以使用Quantumult X来使用这个节点，但win端不能直接使用了。</p><h4 id="5-2-Android端"><a href="#5-2-Android端" class="headerlink" title="5.2 Android端"></a>5.2 Android端</h4><p>先到这个<a href="https://github.com/shadowsocks/v2ray-plugin-android/releases" target="_blank" rel="noopener">链接</a>下载插件并安装<br>其余的配置都跟上面win端一致</p><h4 id="5-3-ios端"><a href="#5-3-ios端" class="headerlink" title="5.3 ios端"></a>5.3 ios端</h4><p>请使用<code>Shadowrocket</code>，也就是俗称的小火箭，配置添加使用。</p><img src="/2019/12/14/使用docker快速部署shadowsocks-libev-v2ray-plugin代理/3.png"><img src="/2019/12/14/使用docker快速部署shadowsocks-libev-v2ray-plugin代理/4.png"><img src="/2019/12/14/使用docker快速部署shadowsocks-libev-v2ray-plugin代理/5.png"></li></ul><p><strong>原文链接：</strong><a href="https://ssu.tw/index.php/archives/31/" target="_blank" rel="noopener">https://ssu.tw/index.php/archives/31/</a></p><p><strong>参考链接：</strong><br><a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noopener">github上shadowsocks-libev项目开源地址</a><br><a href="https://github.com/shadowsocks/v2ray-plugin" target="_blank" rel="noopener">github上v2ray-plugin插件项目开源地址</a><br><a href="https://github.com/shadowsocks/simple-obfs" target="_blank" rel="noopener">github上simple-obfs插件项目开源地址</a><br><a href="https://github.com/docker/docker-ce" target="_blank" rel="noopener">github上docker项目开源地址</a><br><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">github上Neilpang关于acme.sh证书申请脚本项目开源地址</a><br><a href="https://teddysun.com/536.html" target="_blank" rel="noopener">秋水逸冰“介绍几款Docker镜像”文章</a><br><a href="https://hub.docker.com/r/teddysun/shadowsocks-libev" target="_blank" rel="noopener">秋水逸冰发布shadowsocks-libev docker镜像地址</a><br><a href="https://shadowsocks.org/" target="_blank" rel="noopener">shadowsocks官网地址介绍</a><br><a href="https://toutyrater.github.io/advanced/wss_and_web.html" target="_blank" rel="noopener">V2Ray白话文配置教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言：Shadowsocks-libev是一款安全、轻量和快速的代理协议。它是由clowwindy发明，后同很多技术大牛一起开发，原作者被喝茶以后，因为项目是开源的，所以很多人fork后继续开发，现在主要由madeye负责更新维护。shadowsocks注重加密，数据包几乎
      
    
    </summary>
    
    
      <category term="shadowsocks" scheme="http://jiayie.xyz/categories/shadowsocks/"/>
    
    
      <category term="v2" scheme="http://jiayie.xyz/tags/v2/"/>
    
  </entry>
  
  <entry>
    <title>用acme.sh脚本申请证书并自动续更</title>
    <link href="http://jiayie.xyz/2019/12/14/%E7%94%A8acme-sh%E8%84%9A%E6%9C%AC%E7%94%B3%E8%AF%B7%E8%AF%81%E4%B9%A6%E5%B9%B6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9B%B4/"/>
    <id>http://jiayie.xyz/2019/12/14/%E7%94%A8acme-sh%E8%84%9A%E6%9C%AC%E7%94%B3%E8%AF%B7%E8%AF%81%E4%B9%A6%E5%B9%B6%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9B%B4/</id>
    <published>2019-12-14T13:23:00.000Z</published>
    <updated>2019-12-14T13:33:20.178Z</updated>
    
    <content type="html"><![CDATA[<p>前言：acme.sh脚本实现了acme协议，可以从letsencrypt生成免费的证书，并且支持手动发行免费的通配符证书，这对广大个人站长无疑是个很大的福利。</p><p>本文则主要介绍使用acme.sh脚本搭配Cloudflare的Global API Key来为托管在Cloudflare上的域名申请证书，并实现到期自动续订的步骤。</p><p>本文参考：<a href="https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E</a></p><h3 id="一、安装acme-sh脚本"><a href="#一、安装acme-sh脚本" class="headerlink" title="一、安装acme.sh脚本"></a>一、安装acme.sh脚本</h3><h4 id="1-1-执行下面的命令"><a href="#1-1-执行下面的命令" class="headerlink" title="1.1 执行下面的命令"></a>1.1 执行下面的命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get -y install socat //安装socat</span><br><span class="line"></span><br><span class="line">wget -qO- get.acme.sh | bash //安装脚本</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc //让环境变量生效，以后无论在哪个路径，直接使用acme.sh</span><br></pre></td></tr></table></figure><p>说明：root用户和非root用户都可以安装使用，安装过程不污染已有的系统任何功能和文件，所有的修改都限制在安装目录中。</p><h4 id="1-2-安装过程及安装目录解释（嫌麻烦可以跳过）"><a href="#1-2-安装过程及安装目录解释（嫌麻烦可以跳过）" class="headerlink" title="1.2 安装过程及安装目录解释（嫌麻烦可以跳过）"></a>1.2 安装过程及安装目录解释（嫌麻烦可以跳过）</h4><ul><li>先把acme.sh安装到你的/home/user/.acme.sh目录下，root用户则安装到/root/.acme.sh目录下。</li><li>创建一个bash的alias，方便你的使用： alias acme.sh=~/.acme.sh/acme.sh</li><li>它会自动在.bashrc的最后添加环境变量，. “/home/user/.acme.sh/acme.sh.env”，如果是root用户，则为. “/root/.acme.sh/acme.sh.env”，你需要 source ~/.bashrc命令使环境变量生效，以后就可以直接使用acme.sh命令了。</li><li>自动为你创建crontabjob任务，每天0:00自动检测所有的证书，如果快过期了需要更新，则会自动更新证书。</li><li>更高级的证书安装选项请参考：<a href="https://github.com/Neilpang/acme.sh/wiki/How-to-install" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh/wiki/How-to-install</a><h3 id="二、到Cloudflare那里拿到Global-API-Key"><a href="#二、到Cloudflare那里拿到Global-API-Key" class="headerlink" title="二、到Cloudflare那里拿到Global API Key"></a>二、到Cloudflare那里拿到Global API Key</h3><h4 id="2-1-注册Cloudflare账号并添加域名"><a href="#2-1-注册Cloudflare账号并添加域名" class="headerlink" title="2.1 注册Cloudflare账号并添加域名"></a>2.1 注册Cloudflare账号并添加域名</h4>这个就不用多做介绍了吧，注意要在域名注册商那里把域名的NS权限交由Cloudflare来解析，才能添加上域名，之后添加A记录，假设域名是mydomain.me，Name填@或者www，Content填你的VPS IP，TTL默认，CDN云朵可以开启也可以不开启。<h4 id="2-2-获取Global-API-Key"><a href="#2-2-获取Global-API-Key" class="headerlink" title="2.2 获取Global API Key"></a>2.2 获取Global API Key</h4><img src="/2019/12/14/用acme-sh脚本申请证书并自动续更/1.png">按照图示操作复制此Key即可，注意保存在安全位置。<h3 id="三、配置证书-dns-cf-api验证"><a href="#三、配置证书-dns-cf-api验证" class="headerlink" title="三、配置证书(dns+cf api验证)"></a>三、配置证书(dns+cf api验证)</h3><h4 id="3-1-配置条件"><a href="#3-1-配置条件" class="headerlink" title="3.1 配置条件"></a>3.1 配置条件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">"slfjksjffjfhfhkjhfksjf"</span> //此处替换成你自己的Key</span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">"yourcloudflare@gmail.com"</span> //此处填写你注册Cloudflare使用的邮箱账号</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-申请颁发ECC证书"><a href="#3-2-申请颁发ECC证书" class="headerlink" title="3.2 申请颁发ECC证书"></a>3.2 申请颁发ECC证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d mydomain.me -k ec-256</span><br></pre></td></tr></table></figure><p>说明：上面的CF_Key和CF_Email在执行这一步之后将被保存到<code>/root/.acme.sh/account.conf</code>文件中，在需要时会被重新使用。域名套CDN状态下也可以申请成功证书。<br>关于更详细的api用法，请参考：<a href="https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md</a></p><h4 id="3-3-复制-安装证书"><a href="#3-3-复制-安装证书" class="headerlink" title="3.3 复制/安装证书"></a>3.3 复制/安装证书</h4><p>注意：默认生成的证书都放置在~/.acme.sh/mydomain.me_ecc目录下，请不要直接使用这目录下的文件，因为这里属于内部文件，且将来目录结构可能会变化。<br>正确的使用方法如下（假定在/root/ssl目录下放置证书）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --installcert -d mydomain.me --fullchain-file /root/ssl/web.cer --key-file /root/ssl/web.key --ecc</span><br></pre></td></tr></table></figure><p><strong>值得注意的是</strong>：这里指定的所有参数会被自动记录下来，并且在证书自动更新以后会被再次调用。</p><h4 id="四、更新证书"><a href="#四、更新证书" class="headerlink" title="四、更新证书"></a>四、更新证书</h4><p>关于从Letsencrypt申请到的证书，有效期为90天，脚本会每60天自动更新证书，你无须进行任何操作，今后可能会缩短这个时间，不过都是自动的，你不用关心。</p><h4 id="五、更新acme-sh脚本"><a href="#五、更新acme-sh脚本" class="headerlink" title="五、更新acme.sh脚本"></a>五、更新acme.sh脚本</h4><p>目前由于acme协议和letsencrypt CA都在频繁的更新，因此acme.sh脚本呢也经常更新以保持同步。</p><h4 id="5-1-升级acme-sh到最新版"><a href="#5-1-升级acme-sh到最新版" class="headerlink" title="5.1 升级acme.sh到最新版"></a>5.1 升级acme.sh到最新版</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade</span><br></pre></td></tr></table></figure><h4 id="5-2-如果你不想手动升级，可以开启自动升级："><a href="#5-2-如果你不想手动升级，可以开启自动升级：" class="headerlink" title="5.2 如果你不想手动升级，可以开启自动升级："></a>5.2 如果你不想手动升级，可以开启自动升级：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure><h4 id="5-3-你也可以随时关闭脚本的自动更新"><a href="#5-3-你也可以随时关闭脚本的自动更新" class="headerlink" title="5.3 你也可以随时关闭脚本的自动更新"></a>5.3 你也可以随时关闭脚本的自动更新</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade --auto-upgrade 0</span><br></pre></td></tr></table></figure><h3 id="六、定时任务"><a href="#六、定时任务" class="headerlink" title="六、定时任务"></a>六、定时任务</h3><h4 id="6-1-安装crontab"><a href="#6-1-安装crontab" class="headerlink" title="6.1 安装crontab"></a>6.1 安装crontab</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get -y install cron</span><br></pre></td></tr></table></figure><h4 id="6-2-设置定时任务"><a href="#6-2-设置定时任务" class="headerlink" title="6.2 设置定时任务"></a>6.2 设置定时任务</h4><p>如果你是用的lamp搭建的网站，并在lamp add添加站点过程中手动指定了证书的位置为<code>/root/ssl</code>，证书：<code>/root/ssl/web.cer</code>和key：<code>/root/ssl/web.key</code>，那么你可以设置定时任务定时自动将证书放到这里。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e //编辑定时任务</span><br><span class="line"></span><br><span class="line">0 3 15 */2 * acme.sh --installcert -d mydomain.me --fullchain-file /root/ssl/web.cer --key-file /root/ssl/web.key --ecc &amp;&amp; /etc/init.d/httpd restart</span><br></pre></td></tr></table></figure><p>说明：这是设置每隔2个月在15号的3:00安装证书和key到/root/ssl目录下，并重启apache服务。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言：acme.sh脚本实现了acme协议，可以从letsencrypt生成免费的证书，并且支持手动发行免费的通配符证书，这对广大个人站长无疑是个很大的福利。&lt;/p&gt;
&lt;p&gt;本文则主要介绍使用acme.sh脚本搭配Cloudflare的Global API Key来为托管在
      
    
    </summary>
    
    
      <category term="域名证书" scheme="http://jiayie.xyz/categories/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    
    
      <category term="脚本申请证书" scheme="http://jiayie.xyz/tags/%E8%84%9A%E6%9C%AC%E7%94%B3%E8%AF%B7%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu-18.04-LTS安装KVM虚拟机</title>
    <link href="http://jiayie.xyz/2019/12/14/Ubuntu-18-04-LTS%E5%AE%89%E8%A3%85KVM%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>http://jiayie.xyz/2019/12/14/Ubuntu-18-04-LTS%E5%AE%89%E8%A3%85KVM%E8%99%9A%E6%8B%9F%E6%9C%BA/</id>
    <published>2019-12-14T10:24:20.000Z</published>
    <updated>2019-12-14T10:50:35.501Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先需要检查一下CPU是否支持虚拟化，执行一下命令来检查/proc/cpuinfo文件中是否又虚拟化相关的字眼，如果有的话表明CPU支持虚拟化技术。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep -c <span class="string">'(svm|vmx)'</span> /proc/cpuinfo</span><br></pre></td></tr></table></figure><p>上面命令执行结果如果返回0，表示CPU不支持虚拟化技术。当然主板BIOS中的虚拟化技术也可能不是默认开启的，如果没有开启需要手动开启一下。</p><h3 id="安装KVM"><a href="#安装KVM" class="headerlink" title="安装KVM"></a>安装KVM</h3><p>执行以下命令安装KVM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install qemu qemu-kvm libvirt-bin  bridge-utils  virt-manager</span><br></pre></td></tr></table></figure><p>然后执行下面的命令看KVM是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kvm-ok</span><br></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO: /dev/kvm exists</span><br><span class="line">KVM acceleration can be used</span><br></pre></td></tr></table></figure><p>如果输出是这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO: Your CPU does not support KVM extensions</span><br><span class="line">KVM acceleration can NOT be used</span><br></pre></td></tr></table></figure><p>这表明你的CPU不支持硬件虚拟化。 这时你还是可以跑虚拟机，不过会非常慢。如果你的CPU支持硬件虚拟化， 但BIOS没有打开，也会提示给你的</p><h4 id="查看kvm内核模块是否已加载"><a href="#查看kvm内核模块是否已加载" class="headerlink" title="查看kvm内核模块是否已加载"></a>查看kvm内核模块是否已加载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsmod | grep kvm</span><br></pre></td></tr></table></figure><p>若KVM内核没加载执行下面命令加载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe kvm</span><br></pre></td></tr></table></figure><p>打开一个命令行窗口， 输入以下命令启动虚拟机管理程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">birt-manager</span><br></pre></td></tr></table></figure><p>将libvirtd添加自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start libvirtd.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> libvirtd.service</span><br></pre></td></tr></table></figure><h3 id="网络模式"><a href="#网络模式" class="headerlink" title="网络模式"></a>网络模式</h3><p>KVM安装完成后，首先需要进行网络设定，KVM支持四种网络模式：</p><ul><li>桥接模式</li><li>NAT模式</li><li>用户网络模式,即创建 vm 时默认的网络模式</li><li>直接分配设备模式<h3 id="桥接（Bridge）模式"><a href="#桥接（Bridge）模式" class="headerlink" title="桥接（Bridge）模式"></a>桥接（Bridge）模式</h3>在桥接模式下，宿主机和虚拟机共享同一个物理网络设备，虚拟机中的网卡和物理机中的网卡是平行关系，所以虚拟机可以直接接入外部网络，虚拟机和宿主机有平级的IP。原本宿主机是通过网卡eth0连接外部网络的，网桥模式会新创建一个网桥br0，接管eth0来连接外部网络，然后将宿主机和虚拟机的网卡eth0都绑定到网桥上。<h4 id="使用桥接模式需要进行以下操作："><a href="#使用桥接模式需要进行以下操作：" class="headerlink" title="使用桥接模式需要进行以下操作："></a>使用桥接模式需要进行以下操作：</h4>编辑/etc/network/interfaces，增加如下内容<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">auto br0</span><br><span class="line">iface br0 inet dhcp  <span class="comment"># 网桥使用DHCP模式，从DHCP服务器获取IP</span></span><br><span class="line">bridge_ports enp3s0  <span class="comment"># 网卡名称，网桥创建前连接外部的网卡，可通过ifconfig命令查看，有IP地址的就是</span></span><br><span class="line">bridge_stp on  <span class="comment"># 避免数据链路出现死循环</span></span><br><span class="line">bridge_fd 0  <span class="comment"># 将转发延迟设置为0</span></span><br></pre></td></tr></table></figure></li></ul><p>接下来需要重启networking服务（如果是通过SSH连接到宿主机上的，这一步会导致网络中断，如果出现问题可能导致连不上宿主机，最好在宿主机上直接操作）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart networking.service</span><br></pre></td></tr></table></figure><p>使用ifconfig命令查看IP是否从enp3s0（网桥创建前的网卡）变到了br0上，如果没有变化则需要重启。如果宿主机ip已经成功变到网桥上，并且宿主机能正常上网而虚拟机获取不到ip，可能是ufw没有允许ip转发导致的，编辑<code>/etc/default/ufw</code>允许ip转发。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_FORWARD_POLICY=<span class="string">"ACCEPT"</span></span><br></pre></td></tr></table></figure><p>重启ufw服务让设置生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ufw.service</span><br></pre></td></tr></table></figure><h4 id="NAT（Network-Address-Translation）模式"><a href="#NAT（Network-Address-Translation）模式" class="headerlink" title="NAT（Network Address Translation）模式"></a>NAT（Network Address Translation）模式</h4><p>NAT模式是KVM默认的网络模式，KVM会创建一个名为virbr0的虚拟网桥，但是宿主机和虚拟机对于网桥来说不是平等的了，网桥会把虚拟机藏在背后，虚拟机会被分配一个内网IP，而从外网访问不到虚拟机。</p><h3 id="安装Linux虚拟机"><a href="#安装Linux虚拟机" class="headerlink" title="安装Linux虚拟机"></a>安装Linux虚拟机</h3><p>使用如下命令安装安装Linux虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo virt-install -n ubuntu_3</span><br><span class="line"> --description <span class="string">"ubuntu_3"</span> </span><br><span class="line"> --os-type=linux --os-variant=ubuntu17.10 --ram=1024 --vcpus=1 </span><br><span class="line"> --disk path=/var/lib/libvirt/images/ubuntu_3.img,bus=virtio,size=50  <span class="comment"># 磁盘位置，大小50G</span></span><br><span class="line"> --network bridge:br0  <span class="comment"># 这里网络选择了桥接模式</span></span><br><span class="line"> --accelerate</span><br><span class="line"> --graphics vnc,listen=0.0.0.0,keymap=en-us  <span class="comment"># VNC监听端口，注意要选择en-us作为key-map，否则键位布局可能会乱</span></span><br><span class="line"> --cdrom /home/zzy/Downloads/ubuntu-18.04-live-server-amd64.iso  <span class="comment"># 安装ISO路径</span></span><br></pre></td></tr></table></figure><h4 id="安装Windows-10虚拟机"><a href="#安装Windows-10虚拟机" class="headerlink" title="安装Windows 10虚拟机"></a>安装Windows 10虚拟机</h4><p>安装Windows 10虚拟机会出现没有virtio驱动的问题，导致安装程序找不到硬盘，需要先下载virtio驱动。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://fedoraproject.org/wiki/Windows_Virtio_Drivers</span><br><span class="line">https://docs.fedoraproject.org/en-US/quick-docs/creating-windows-virtual-machines-using-virtio-drivers/index.html</span><br></pre></td></tr></table></figure><p>创建虚拟机时，将其加入到CD-ROM中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo virt-install -n win10</span><br><span class="line"> --description <span class="string">"win10"</span></span><br><span class="line"> --os-type=win --os-variant=win10</span><br><span class="line"> --ram=4096 --vcpus=2 </span><br><span class="line"> --disk path=/var/lib/libvirt/images/win_10.img,bus=virtio,size=100</span><br><span class="line"> --network bridge:br0</span><br><span class="line"> --accelerate</span><br><span class="line"> --graphics vnc,listen=0.0.0.0,keymap=en-us</span><br><span class="line"> --cdrom=/home/zzy/Downloads/virtio-win.iso</span><br><span class="line"> --cdrom=/home/zzy/Downloads/cn_windows_10_consumer_editions_version_1803_updated_march_2018_x64_dvd_12063766.iso</span><br></pre></td></tr></table></figure><h4 id="使用VNC客户端连接虚拟机"><a href="#使用VNC客户端连接虚拟机" class="headerlink" title="使用VNC客户端连接虚拟机"></a>使用VNC客户端连接虚拟机</h4><p>执行以下命令查看虚拟机的列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh list</span><br></pre></td></tr></table></figure><p>通过上一步查处的虚拟机列表，查看单台机器的VNC端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo virsh vncdisplay ubuntu_3 <span class="comment"># ubuntu_3是虚拟机名称</span></span><br></pre></td></tr></table></figure><p>知道了VNC端口号，就可以使用VNC客户端连接到虚拟机完成安装了。</p><h3 id="QEMU内部用户模式网络"><a href="#QEMU内部用户模式网络" class="headerlink" title="QEMU内部用户模式网络"></a>QEMU内部用户模式网络</h3><p>用户模式网络（默认的网络模式）完全由qemu实现，不依赖其他工具，是qemu使用slirp实现的一整套TCP/IP协议栈，并使用这个协议栈实现了一整套虚拟的NAT网络<br>这种方式优点在于简单、独立性好、不需要root权限，但存在以下三个缺点</p><ul><li>性能较差</li><li>不支持部分网络功能，例如ICMP协议</li><li>不能从宿主机和外部网络访问客户机</li></ul><p>原文链接：<a href="https://segmentfault.com/a/1190000015418876" target="_blank" rel="noopener">https://segmentfault.com/a/1190000015418876</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;首先需要检查一下CPU是否支持虚拟化，执行一下命令来检查/proc/cpuinfo文件中是否又虚拟化相关的字眼，如果有的话表
      
    
    </summary>
    
    
      <category term="KVM虚拟机" scheme="http://jiayie.xyz/categories/KVM%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="虚拟机" scheme="http://jiayie.xyz/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Debian/Ubuntu/CentOS,网络安装/网络重装/纯净安装-一键脚本</title>
    <link href="http://jiayie.xyz/2019/12/13/Debian-Ubuntu-CentOS-%E7%BD%91%E7%BB%9C%E5%AE%89%E8%A3%85-%E7%BD%91%E7%BB%9C%E9%87%8D%E8%A3%85-%E7%BA%AF%E5%87%80%E5%AE%89%E8%A3%85-%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/"/>
    <id>http://jiayie.xyz/2019/12/13/Debian-Ubuntu-CentOS-%E7%BD%91%E7%BB%9C%E5%AE%89%E8%A3%85-%E7%BD%91%E7%BB%9C%E9%87%8D%E8%A3%85-%E7%BA%AF%E5%87%80%E5%AE%89%E8%A3%85-%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/</id>
    <published>2019-12-13T10:09:36.000Z</published>
    <updated>2019-12-13T10:18:18.441Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景:"></a>背景:</h4><p>适用于由GRUB引导的CentOS,Ubuntu,Debian系统.<br>使用官方发行版去掉模板预装的软件.<br>同时也可以解决内核版本与软件不兼容的问题。<br>只要有root权限,还您一个纯净的系统。</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h4><ul><li>全自动安装默认root密码:MoeClub.org</li><li>安装完成后请立即更改密码.</li><li>能够全自动重装Debian/Ubuntu/CentOS等系统.</li><li>同时提供dd安装镜像功能,例如: 全自动无救援dd安装windows系统</li><li>全自动安装CentOS时默认提供VNC功能,可使用VNC Viewer查看进度,</li><li>VNC端口为1或者5901,可自行尝试连接.(成功后VNC功能会消失.)</li><li>目前CentOS系统只支持任意版本重装为 CentOS 6.x 及以下版本.</li><li>特别注意:OpenVZ构架不适用.<h4 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包:"></a>依赖包:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#二进制文件    Debian/Ubuntu    RedHat/CentOS</span></span><br><span class="line">iconv         [libc-bin]       [glibc-common]</span><br><span class="line">xz            [xz-utils]       [xz]</span><br><span class="line">awk           [gawk]           [gawk]</span><br><span class="line">sed           [sed]            [sed]</span><br><span class="line">file          [file]           [file]</span><br><span class="line">grep          [grep]           [grep]</span><br><span class="line">openssl       [openssl]        [openssl]</span><br><span class="line">cpio          [cpio]           [cpio]</span><br><span class="line">gzip          [gzip]           [gzip]</span><br><span class="line">cat,cut..     [coreutils]      [coreutils]</span><br></pre></td></tr></table></figure></li></ul><h4 id="确保安装了所需软件"><a href="#确保安装了所需软件" class="headerlink" title="确保安装了所需软件:"></a>确保安装了所需软件:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure><h3 id="如果出现了错误-请运行"><a href="#如果出现了错误-请运行" class="headerlink" title="如果出现了错误,请运行:"></a>如果出现了错误,请运行:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure><h4 id="快速使用示例"><a href="#快速使用示例" class="headerlink" title="快速使用示例:"></a>快速使用示例:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span>) -d 8 -v 64 -a</span><br></pre></td></tr></table></figure><h4 id="下载及说明"><a href="#下载及说明" class="headerlink" title="下载及说明:"></a>下载及说明:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">'https://moeclub.org/attachment/LinuxShell/InstallNET.sh'</span> &amp;&amp; chmod a+x InstallNET.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">        bash InstallNET.sh      -d/--debian [dist-name]</span><br><span class="line">                                -u/--ubuntu [dist-name]</span><br><span class="line">                                -c/--centos [dist-version]</span><br><span class="line">                                -v/--ver [32/i386|64/amd64]</span><br><span class="line">                                --ip-addr/--ip-gate/--ip-mask</span><br><span class="line">                                -apt/-yum/--mirror</span><br><span class="line">                                -dd/--image</span><br><span class="line">                                -a/-m</span><br><span class="line"></span><br><span class="line"><span class="comment"># dist-name: 发行版本代号</span></span><br><span class="line"><span class="comment"># dist-version: 发行版本号</span></span><br><span class="line"><span class="comment"># -apt/-yum/--mirror : 使用定义镜像</span></span><br><span class="line"><span class="comment"># -a/-m : 询问是否能进入VNC自行操作. -a 为不提示(一般用于全自动安装), -m 为提示.</span></span><br></pre></td></tr></table></figure><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例:"></a>使用示例:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用默认镜像全自动安装</span></span><br><span class="line">bash InstallNET.sh -d 8 -v 64 -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自定义镜像全自动安装</span></span><br><span class="line">bash InstallNET.sh -c 6.10 -v 64 -a --mirror <span class="string">'http://mirror.centos.org/centos'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下示例中,将X.X.X.X替换为自己的网络参数.</span></span><br><span class="line"><span class="comment"># --ip-addr :IP Address/IP地址</span></span><br><span class="line"><span class="comment"># --ip-gate :Gateway   /网关</span></span><br><span class="line"><span class="comment"># --ip-mask :Netmask   /子网掩码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自定义镜像全自动安装</span></span><br><span class="line"><span class="comment">#bash InstallNET.sh -d 9 -v 64 -a --mirror 'http://mirrors.ustc.edu.cn/debian/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自定义镜像自定义网络参数全自动安装</span></span><br><span class="line"><span class="comment">#bash InstallNET.sh -u 16.04 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror 'http://archive.ubuntu.com/ubuntu'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自定义网络参数全自动dd方式安装</span></span><br><span class="line"><span class="comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd 'https://moeclub.org/onedrive/IMAGE/Windows/win7emb_x86.tar.gz'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像(调用文件ID的方式)</span></span><br><span class="line"><span class="comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd "https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像</span></span><br><span class="line"><span class="comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd "https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#国内推荐使用USTC源</span></span><br><span class="line"><span class="comment">#--mirror 'http://mirrors.ustc.edu.cn/debian/'</span></span><br></pre></td></tr></table></figure><h4 id="一些可用镜像地址"><a href="#一些可用镜像地址" class="headerlink" title="一些可用镜像地址:"></a>一些可用镜像地址:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推荐使用带有 /GoogleDrive/ 链接, 速度更快.</span></span><br><span class="line"><span class="comment"># 当然也可以使用自己GoogleDrive中储存的镜像,使用方式:</span></span><br><span class="line">  https://image.moeclub.org/GoogleDrive/</span><br><span class="line"></span><br><span class="line"><span class="comment"># win7emb_x86.tar.gz:</span></span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1srhylymTjYS-Ky8uLw4R6LCWfAo1F3s7 </span><br><span class="line">  https://moeclub.org/onedrive/IMAGE/Windows/win7emb_x86.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># win8.1emb_x64.tar.gz:</span></span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J</span><br><span class="line">  https://moeclub.org/onedrive/IMAGE/Windows/win8.1emb_x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># win10ltsc_x64.tar.gz:</span></span><br><span class="line">  https://image.moeclub.org/GoogleDrive/1OVA3t-ZI2arkM4E4gKvofcBN9aoVdneh</span><br><span class="line">  https://moeclub.org/onedrive/IMAGE/Windows/win10ltsc_x64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="注：原文在安装Debian9的时的命令有错吴，本文已做修改。可放心使用"><a href="#注：原文在安装Debian9的时的命令有错吴，本文已做修改。可放心使用" class="headerlink" title="注：原文在安装Debian9的时的命令有错吴，本文已做修改。可放心使用"></a>注：原文在安装Debian9的时的命令有错吴，本文已做修改。可放心使用</h3><p>本文原作者：萌咖<br>原文地址：  <a href="https://moeclub.org/2018/04/03/603/?spm=60.1" target="_blank" rel="noopener">https://moeclub.org/2018/04/03/603/?spm=60.1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景:&quot;&gt;&lt;/a&gt;背景:&lt;/h4&gt;&lt;p&gt;适用于由GRUB引导的CentOS,Ubuntu,Debian系统.&lt;br&gt;使用官方发行版去掉模板预装的软件.&lt;br&gt;同时也可以解决内核
      
    
    </summary>
    
    
      <category term="一键脚本" scheme="http://jiayie.xyz/categories/%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="网络重装" scheme="http://jiayie.xyz/tags/%E7%BD%91%E7%BB%9C%E9%87%8D%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>hexo的next主题个性化教程</title>
    <link href="http://jiayie.xyz/2019/12/12/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E6%95%99%E7%A8%8B/"/>
    <id>http://jiayie.xyz/2019/12/12/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E6%95%99%E7%A8%8B/</id>
    <published>2019-12-12T07:19:14.000Z</published>
    <updated>2019-12-21T12:31:26.385Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-在右上角或者左上角实现fork-me-on-github"><a href="#1-在右上角或者左上角实现fork-me-on-github" class="headerlink" title="1. 在右上角或者左上角实现fork me on github"></a>1. 在右上角或者左上角实现fork me on github</h3><p>实现效果图</p><img src="/2019/12/12/hexo的next主题个性化教程/1.jpg"><img src="/2019/12/12/hexo的next主题个性化教程/2.png"><p> 具体实现方法<br>点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>或者<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：</p><img src="/2019/12/12/hexo的next主题个性化教程/3.png"><p>然后粘贴刚才复制的代码到 <figure class="highlight plain"><figcaption><span>class</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img 4.png %&#125;</span><br><span class="line">### 2. 添加RSS ###</span><br><span class="line">实现效果图</span><br><span class="line">&#123;% asset_img 5.png %&#125;</span><br><span class="line"> 具体实现方法 </span><br><span class="line">切换到你的blog（我是取名blog，具体的看你们的取名是什么）的路径，例如我是在`/Users/chenzekun/Code/Hexo/blog`这个路径上，也就是在你的根目录下,然后安装 Hexo 插件：(这个插件会放在node_modules这个文件夹里)</span><br><span class="line">```html</span><br><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></p><p>然后打开跟目录下的_config.yml配置文件。在里面的末尾添加：(请注意在冒号后面要加一个空格，不然会发生错误！)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><p>然后打开next主题文件夹里面的<code>_config.yml</code>,在里面配置为如下样子：(就是在<code>rss:</code>的后面加上<code>/atom.xml</code>,注意在冒号后面要加一个空格)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site's feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><p>配置完之后运行：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>重新生成一次，你会在<code>./public</code> 文件夹中看到<code>atom.xml</code>文件。然后启动服务器查看是否有效，之后再部署到<code>Github</code>中。</p><h4 id="3-实现点击出现桃心效果"><a href="#3-实现点击出现桃心效果" class="headerlink" title="3. 实现点击出现桃心效果"></a>3. 实现点击出现桃心效果</h4><p> 具体实现方法 </p><p>在网址输入如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</span><br></pre></td></tr></table></figure><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-修改文章内链接文本样式"><a href="#4-修改文章内链接文本样式" class="headerlink" title="4. 修改文章内链接文本样式"></a>4. 修改文章内链接文本样式</h4><p>实现效果图</p><img src="/2019/12/12/hexo的next主题个性化教程/6.png"><p> 具体实现方法<br>修改文件<code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式，：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中选择<code>.post-body</code>是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><h4 id="5-修改文章底部的那个带-号的标签"><a href="#5-修改文章底部的那个带-号的标签" class="headerlink" title="5. 修改文章底部的那个带#号的标签"></a>5. 修改文章底部的那个带#号的标签</h4><p>实现效果图</p><img src="/2019/12/12/hexo的next主题个性化教程/7.png"><p> 具体实现方法<br>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 <code>#</code> 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h4 id="6-在每篇文章末尾统一添加“本文结束”标记"><a href="#6-在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="6. 在每篇文章末尾统一添加“本文结束”标记"></a>6. 在每篇文章末尾统一添加“本文结束”标记</h4><p> 具体实现方法<br>在路径<code>\themes\next\layout\_macro</code>中新建 <code>passage-end-tag.swig</code>文件,并添加以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>-------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（post-footer之前两个DIV）：</p><img src="/2019/12/12/hexo的next主题个性化教程/8.png"><p>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（_config.yml),在末尾添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><h4 id="7-修改作者头像并旋转"><a href="#7-修改作者头像并旋转" class="headerlink" title="7. 修改作者头像并旋转"></a>7. 修改作者头像并旋转</h4><p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  /* 头像圆形 */</span><br><span class="line">  border-radius: 80px;</span><br><span class="line">  -webkit-border-radius: 80px;</span><br><span class="line">  -moz-border-radius: 80px;</span><br><span class="line">  box-shadow: inset 0 -1px 0 #333sf;</span><br><span class="line">  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span><br><span class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span><br><span class="line"> </span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">img:hover &#123;</span><br><span class="line">  /* 鼠标经过停止头像旋转 </span><br><span class="line">  -webkit-animation-play-state:paused;</span><br><span class="line">  animation-play-state:paused;*/</span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br><span class="line">/* Z 轴旋转动画 */</span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -moz-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -moz-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-博文压缩"><a href="#8-博文压缩" class="headerlink" title="8. 博文压缩"></a>8. 博文压缩</h4><p>在站点的根目录下执行以下命令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure><p>新建<code>gulpfile.js</code>，并填入以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require('gulp');</span><br><span class="line">var minifycss = require('gulp-minify-css');</span><br><span class="line">var uglify = require('gulp-uglify');</span><br><span class="line">var htmlmin = require('gulp-htmlmin');</span><br><span class="line">var htmlclean = require('gulp-htmlclean');</span><br><span class="line">// 压缩 public 目录 css</span><br><span class="line">gulp.task('minify-css', function() &#123;</span><br><span class="line">    return gulp.src('./public/**/*.css')</span><br><span class="line">        .pipe(minifycss())</span><br><span class="line">        .pipe(gulp.dest('./public'));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public 目录 html</span><br><span class="line">gulp.task('minify-html', function() &#123;</span><br><span class="line">  return gulp.src('./public/**/*.html')</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(htmlmin(&#123;</span><br><span class="line">         removeComments: true,</span><br><span class="line">         minifyJS: true,</span><br><span class="line">         minifyCSS: true,</span><br><span class="line">         minifyURLs: true,</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest('./public'))</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public/js 目录 js</span><br><span class="line">gulp.task('minify-js', function() &#123;</span><br><span class="line">    return gulp.src('./public/**/*.js')</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest('./public'));</span><br><span class="line">&#125;);</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task('default', [</span><br><span class="line">    'minify-html','minify-css','minify-js'</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>生成博文是执行 <code>hexo g &amp;&amp; gulp</code>就会根据 <code>gulpfile.js</code>中的配置，对<code>public</code>目录中的静态资源文件进行压缩。</p><h4 id="9-修改-代码块自定义样式"><a href="#9-修改-代码块自定义样式" class="headerlink" title="9. 修改``代码块自定义样式"></a>9. 修改``代码块自定义样式</h4><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">code &#123;</span><br><span class="line">    color: #ff7600;</span><br><span class="line">    background: #fbf7f8;</span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-侧边栏社交小图标设置"><a href="#10-侧边栏社交小图标设置" class="headerlink" title="10. 侧边栏社交小图标设置"></a>10. 侧边栏社交小图标设置</h4> <img src="/2019/12/12/hexo的next主题个性化教程/9.png"><p>打开主题配置文件<code>（_config.yml）</code>，搜索<code>social_icons:</code>,在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可<br> <img src="/2019/12/12/hexo的next主题个性化教程/10.png"></p><h4 id="11-主页文章添加阴影效果"><a href="#11-主页文章添加阴影效果" class="headerlink" title="11. 主页文章添加阴影效果"></a>11. 主页文章添加阴影效果</h4><p> 打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="12-在网站底部加上访问量"><a href="#12-在网站底部加上访问量" class="headerlink" title="12. 在网站底部加上访问量"></a>12. 在网站底部加上访问量</h4><p> 打开<code>\themes\next\layout\_partials\footer.swig</code>文件,在<code>copyright</code>前加上画红线这句话：<br> <img src="/2019/12/12/hexo的next主题个性化教程/11.png"><br>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后再合适的位置添加显示统计的代码，如图：<br> <img src="/2019/12/12/hexo的next主题个性化教程/12.png"><br>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user-md"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这里有两中不同计算方式的统计代码：</p><ul><li><p>pv的方式，单个用户连续点击n篇文章，记录n次访问量</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>uv的方式，单个用户连续点击n篇文章，只记录1次访客数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>添加之后再执行<code>hexo -g，hexo s</code>然后再刷新页面就能看到效果</p><h4 id="13-添加热度"><a href="#13-添加热度" class="headerlink" title="13. 添加热度"></a>13. 添加热度</h4><p>实现效果图<br> <img src="/2019/12/12/hexo的next主题个性化教程/13.png"><br>实现方法<br>next主题集成<code>leanCloud</code>，打开<code>/themes/next/layout/_macro/post.swig</code>,在画红线的区域添加<code>℃</code>：</p><img src="/2019/12/12/hexo的next主题个性化教程/14.png"><p>然后打开，<code>/themes/next/languages/zh-Hans.yml</code>,将画红框的改为热度就可以了</p><img src="/2019/12/12/hexo的next主题个性化教程/15.png"><h4 id="14-网站底部字数统计"><a href="#14-网站底部字数统计" class="headerlink" title="14. 网站底部字数统计"></a>14. 网站底部字数统计</h4><p> 切换到根目录下，然后运行如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"theme-info"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span>博客全站共&#123;&#123; totalcount(site) &#125;&#125;字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="15-添加-README-md-文件"><a href="#15-添加-README-md-文件" class="headerlink" title="15. 添加 README.md 文件"></a>15. 添加 README.md 文件</h4><p> 每个项目下一般都有一个 README.md 文件，但是使用 hexo 部署到仓库后，项目下是没有 README.md 文件的。<br>在 Hexo 目录下的 <code>source</code>根目录下添加一个<code>README.md</code>文件，修改站点配置文件<code>_config.yml</code>，将 <code>skip_render</code> 参数的值设置为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><p>保存退出即可。再次使用<code>hexo d</code> 命令部署博客的时候就不会在渲染 <code>README.md</code> 这个文件了。</p><h4 id="16-设置网站的图标Favicon"><a href="#16-设置网站的图标Favicon" class="headerlink" title="16. 设置网站的图标Favicon"></a>16. 设置网站的图标Favicon</h4><p> 在<a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a>中找一张（32*32）的ico图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon.ico</code>，然后把图标放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Put your favicon.ico into `hexo-site/source/` directory.</span><br><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure><h4 id="17-实现统计功能"><a href="#17-实现统计功能" class="headerlink" title="17. 实现统计功能"></a>17. 实现统计功能</h4><p>   阅读时长，字数统计<br> 在根目录下安装 hexo-wordcount,运行：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在主题的配置文件中，配置如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br></pre></td></tr></table></figure><h4 id="18-在文章底部增加版权信息"><a href="#18-在文章底部增加版权信息" class="headerlink" title="18. 在文章底部增加版权信息"></a>18. 在文章底部增加版权信息</h4><p>  在目录<code>next/layout/_macro/</code>下添加 <code>my-copyright.swig</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="undefined">        swal(&#123;   </span></span><br><span class="line"><span class="actionscript">          title: <span class="string">""</span>,   </span></span><br><span class="line"><span class="actionscript">          text: <span class="string">'复制成功'</span>,</span></span><br><span class="line"><span class="actionscript">          icon: <span class="string">"success"</span>, </span></span><br><span class="line"><span class="actionscript">          showConfirmButton: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">          &#125;);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined">    &#125;);  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>next/layout/_macro/post.swig</code>，在代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include 'wechat-subscriber.swig' %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之前添加增加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include 'my-copyright.swig' %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2019/12/12/hexo的next主题个性化教程/16.png"><p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import "my-post-copyright"</span><br></pre></td></tr></table></figure><p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加<code>copyright: true</code>的设置，类似：<br>如果你觉得每次都要输入<code>copyright: true</code>很麻烦的话,那么在<code>/scaffolds/post.md</code>文件中添加：</p><img src="/2019/12/12/hexo的next主题个性化教程/17.png"><p>这样每次<code>hexo new &quot;你的内容&quot;</code>之后，生成的md文件会自动把<code>copyright:</code>加到里面去<br>(注意：如果解析出来之后，你的原始链接有问题：如：<a href="http://yoursite.com/前端小项目：使用canvas绘画哆啦A梦.html,那么在根目录下`_config.yml`中写成类似这样：）" target="_blank" rel="noopener">http://yoursite.com/前端小项目：使用canvas绘画哆啦A梦.html,那么在根目录下`_config.yml`中写成类似这样：）</a></p><img src="/2019/12/12/hexo的next主题个性化教程/18.png"><h4 id="19-隐藏网页底部powered-By-Hexo-强力驱动"><a href="#19-隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="19.  隐藏网页底部powered By Hexo / 强力驱动"></a>19.  隐藏网页底部powered By Hexo / 强力驱动</h4><p> 打开<code>themes/next/layout/_partials/footer.swig</code>,使用””隐藏之间的代码即可，或者直接删除。位置如图：</p><img src="/2019/12/12/hexo的next主题个性化教程/19.png"><h4 id="20-修改网页底部的桃心"><a href="#20-修改网页底部的桃心" class="headerlink" title="20. 修改网页底部的桃心"></a>20. 修改网页底部的桃心</h4><p>  还是打开<code>themes/next/layout/_partials/footer.swig</code>，找到：</p><img src="/2019/12/12/hexo的next主题个性化教程/20.png"><p>然后还是在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>中找到你自己喜欢的图标，然后修改画红线的部分就可以了。</p><h4 id="21-文章加密访问"><a href="#21-文章加密访问" class="headerlink" title="21. 文章加密访问"></a>21. 文章加密访问</h4><p>  打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><img src="/2019/12/12/hexo的next主题个性化教程/21.png"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    (<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'密码错误！'</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (history.length === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                    location.replace(<span class="string">"http://xxxxxxx.xxx"</span>); <span class="comment">// 这里替换成你的首页</span></span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                    history.back();</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后在文章上写成类似这样：</p><img src="/2019/12/12/hexo的next主题个性化教程/22.png"><h4 id="22-博文置顶"><a href="#22-博文置顶" class="headerlink" title="22. 博文置顶"></a>22. 博文置顶</h4><p>  修改<code>hero-generator-index</code>插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">'use strict';</span><br><span class="line">var pagination = require('hexo-pagination');</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || 'page';</span><br><span class="line">  return pagination('', posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: ['index', 'archive'],</span><br><span class="line">    format: paginationDir + '/%d/',</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在文章中添加 top 值，数值越大文章越靠前，如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 解决Charles乱码问题</span><br><span class="line">date: 2017-05-22 22:45:48</span><br><span class="line">tags: 技巧</span><br><span class="line">categories: 技巧</span><br><span class="line">copyright: true</span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="23-修改字体大小"><a href="#23-修改字体大小" class="headerlink" title="23. 修改字体大小"></a>23. 修改字体大小</h4><p>   打开<code>\themes\next\source\css\ _variables\base.styl</code>文件，将$<code>font-size-base</code>改成16px，如下所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$font-size-base            =16px</span><br></pre></td></tr></table></figure><h4 id="24-侧边栏推荐阅读"><a href="#24-侧边栏推荐阅读" class="headerlink" title="24. 侧边栏推荐阅读"></a>24. 侧边栏推荐阅读</h4><p>  打开主题配置文件修改成这样就行了(links里面写你想要的链接):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Blogrolls</span><br><span class="line">links_title: 推荐阅读</span><br><span class="line">#links_layout: block</span><br><span class="line">links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  Web前端导航: http://www.alloyteam.com/nav/</span><br><span class="line">  前端书籍资料: http://www.36zhen.com/t?id=3448</span><br><span class="line">  百度前端技术学院: http://ife.baidu.com/</span><br><span class="line">  google前端开发基础: http://wf.uisdc.com/cn/</span><br></pre></td></tr></table></figure><h4 id="25-自定义鼠标样式"><a href="#25-自定义鼠标样式" class="headerlink" title="25. 自定义鼠标样式"></a>25. 自定义鼠标样式</h4><p>打开<code>themes/next/source/css/_custom/custom.styl</code>,在里面写下如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url("http://om8u46rmb.bkt.clouddn.com/sword2.ico"),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url("http://om8u46rmb.bkt.clouddn.com/sword1.ico"),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>其中 url 里面必须是 ico 图片，ico 图片可以上传到网上（我是使用七牛云图床），然后获取外链，复制到 url 里就行了</p><h4 id="26-为博客加上萌萌的宠物"><a href="#26-为博客加上萌萌的宠物" class="headerlink" title="26. 为博客加上萌萌的宠物"></a>26. 为博客加上萌萌的宠物</h4><p>   在终端切换到你的博客的路径里，然后输入如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>然后在在 hexo 的 <code>_config.yml</code>中添加参数：（具体配置可以看<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">官方文档</a>）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure><p>然后<code>hexo clean ，hexo g ，hexo d</code>就可以看到了。<br>注意！如果你在 <code>hexo d</code> 的时候出现我下面这个问题</p><img src="/2019/12/12/hexo的next主题个性化教程/23.png"><p>你可以这样，首先删除hexo 下面的<code>.deploy_git</code>文件夹，然后运行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><p>重新<code>hexo clean,hexo g,hexo d</code>就行了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-在右上角或者左上角实现fork-me-on-github&quot;&gt;&lt;a href=&quot;#1-在右上角或者左上角实现fork-me-on-github&quot; class=&quot;headerlink&quot; title=&quot;1. 在右上角或者左上角实现fork me on github&quot;
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://jiayie.xyz/categories/hexo/"/>
    
    
      <category term="主题个性化" scheme="http://jiayie.xyz/tags/%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo生产sitemap站点地图</title>
    <link href="http://jiayie.xyz/2019/12/11/hexo%E7%94%9F%E4%BA%A7sitemap%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE/"/>
    <id>http://jiayie.xyz/2019/12/11/hexo%E7%94%9F%E4%BA%A7sitemap%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE/</id>
    <published>2019-12-11T04:04:21.000Z</published>
    <updated>2019-12-21T12:31:48.991Z</updated>
    
    <content type="html"><![CDATA[<h4 id="创建站点地图文件"><a href="#创建站点地图文件" class="headerlink" title="创建站点地图文件"></a>创建站点地图文件</h4><p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。</p><p>先安装一下，打开你的hexo博客根目录，分别用下面两个命令来安装针对谷歌和百度的插件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>在博客目录的_config.yml中添加如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Plugins:</span><br><span class="line">- hexo-generator-baidu-sitemap</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure><p>你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了</p><h4 id="验证网站所有权"><a href="#验证网站所有权" class="headerlink" title="验证网站所有权"></a>验证网站所有权</h4><p>进入谷歌站点平台<br>先进入<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">google站点平台</a>，点击右上角的登录，如果还没有谷歌账号的要先注册一个谷歌账号。然后添加资源，这里选择网址前缀，输入博客首页，例如：<a href="https://mrfzh.github.io" target="_blank" rel="noopener">https://mrfzh.github.io</a></p><img src="/2019/12/11/hexo生产sitemap站点地图/1.png"><p>点击继续</p><p>验证网站所有权<br>使用HTML标记验证<br>我一开始使用HTML文件验证，但试了好几次都不行。后来参考别人的方法使用HTML标记验证成功。</p><img src="/2019/12/11/hexo生产sitemap站点地图/2.png"><p>红色框部分是等会要复制的，注意是复制全部</p><p>修改Next主题（v7.1.0）的配置文件<br>接着打开Next主题的配置文件，将google_site_verification属性设置为true</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Google Webmaster tools verification.</span><br><span class="line"># See: https://www.google.com/webmasters</span><br><span class="line">google_site_verification: true</span><br></pre></td></tr></table></figure><h4 id="配置head-swig文件"><a href="#配置head-swig文件" class="headerlink" title="配置head.swig文件"></a>配置head.swig文件</h4><p>然后配置head.swig文件（根目录\themes\next-reloaded\layout_partials\head\head.swig）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.google_site_verification %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"google-site-verification"</span> <span class="attr">content</span>=<span class="string">"X7_M3eeaLhvcnX4TXnFCfa8gF_OXS5CEpA0zKHEBuLY"</span> /&gt;</span> </span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>将中间那行换成上面红色框部分即可，完成这项步骤后，执行下列命令生成静态文件并且部署到github</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>通过验证<br>执行hexo g -d命令，发现在根目录\public文件夹下新增了sitemap.xml和baidusitemap.xml这两个文件，接着要用到的文件是sitemap.xml（baidusitemap.xml是用于收录百度的，这里用不上）</p><h4 id="提交谷歌站点地图"><a href="#提交谷歌站点地图" class="headerlink" title="提交谷歌站点地图"></a>提交谷歌站点地图</h4><p>接着进入谷歌站点，提交刚才验证网站的站点地图</p><img src="/2019/12/11/hexo生产sitemap站点地图/3.png"><p>接着点击提交就可以了</p><p>等待谷歌收录<br>最后谷歌搜索site:mrfzh.github.io，看下网页是否被谷歌收录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;创建站点地图文件&quot;&gt;&lt;a href=&quot;#创建站点地图文件&quot; class=&quot;headerlink&quot; title=&quot;创建站点地图文件&quot;&gt;&lt;/a&gt;创建站点地图文件&lt;/h4&gt;&lt;p&gt;站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Goo
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://jiayie.xyz/categories/hexo/"/>
    
    
      <category term="站点地图" scheme="http://jiayie.xyz/tags/%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>给Hexo,Next设置阅读全文</title>
    <link href="http://jiayie.xyz/2019/12/10/%E7%BB%99Hexo-Next%E8%AE%BE%E7%BD%AE%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87/"/>
    <id>http://jiayie.xyz/2019/12/10/%E7%BB%99Hexo-Next%E8%AE%BE%E7%BD%AE%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87/</id>
    <published>2019-12-10T15:59:19.000Z</published>
    <updated>2019-12-21T12:40:42.217Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 的 Next 主题默认是首页显示你每篇文章的全文内容，但这会使你的首页篇幅过于冗长，针对这个问题我们可以这么做：<br>用编辑器打开themes/next 目录下的_config.yml文件</p><p>*1找到代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">      enable: false</span><br><span class="line">      length: 150</span><br></pre></td></tr></table></figure><p>将enable的 false改成true，length可以设定文章预览的文本长度。<br>*2在文章中使用&lt; !–more–&gt; 手动进行截断<br>这种方法可以根据文章的内容，自己在合适的位置添加 &lt; !–more–&gt; 标签，使用灵活，也是Hexo推荐的方法。</p><img src="/2019/12/10/给Hexo-Next设置阅读全文/1.png"><p>*3在文章中的front-matter中添加description，并提供文章摘录<br>这种方式只会在首页列表中显示文章的摘要内容，进入文章详情后不会再显示。</p><img src="/2019/12/10/给Hexo-Next设置阅读全文/1.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo 的 Next 主题默认是首页显示你每篇文章的全文内容，但这会使你的首页篇幅过于冗长，针对这个问题我们可以这么做：&lt;br&gt;用编辑器打开themes/next 目录下的_config.yml文件&lt;/p&gt;
&lt;p&gt;*1找到代码：&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://jiayie.xyz/categories/hexo/"/>
    
    
      <category term="阅读全文" scheme="http://jiayie.xyz/tags/%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87/"/>
    
  </entry>
  
</feed>
